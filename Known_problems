The following issues have been reported with this version of PDL:

- The perl debugger for perls 5.10.1 through 5.12 have a new
  "feature" leading to false fails for lvalue subroutines when
  run under the debugger.  If you need to debug such code with
  an affected perl version, the work around is to make an
  explicit temp as in:

    $piddle->slice('0:10') .= 100;

  becomes

    my $tmp; # work around perl -d "feature"
    ($tmp = $piddle->slice('0:10')) .= 100;

  The problem is understood and it is hoped that an official
  fix will become available soon.  NOTE: the work around is
  100% effective---but ugly.


- The demo 3d and 3d2 windows do not close (can not be closed)
  after the demo finishes.  You need to exit the perldl shell
  to have the window close.


- When you close a TriD graphics window with the frame widget
  the whole process exits including the perldl shell.


- Label artifacts have been reported for the TriD demos with a 64bit
  linux system.  It has not been determined if the problem is in
  PDL or the host system OpenGL software/configuration.


- The default TriD controls are based on having 2+ button mouse.

  For Macs with one button, you can use Ctrl+Click to generate
  the needed Right-click.  It is also possible to configure the
  Macbook tracpad to generate a secondary click via the control panel.


- PDL::FFTW is based on version 2 of the FFTW API.  The current
  release of the FFTW library is version 3.2.2.  To use PDL::FFTW
  you will need to install FFTW version 2.1.5, use the built-in 
  PDL::FFT routines instead, or (better yet) submit a patch to
  update PDL::FFTW to the version 3 API. 


- Various make command issues during build:

  - Using parallel make causes the build to fail; so don't use -j # options.
  - make fails with message like.
      "*** No rule to make target `pptemplate', needed by `pptemplate.pod'.  Stop."
    The cause is unknown.  If you have this problem, *please* let the developers
    know via the perldl mailing list.


- Extremely verbose but not particularly helpful text output from
  the configure-build-test process.


- PDL configuration failures have come about because needed temp
  files can not be created.  This appears to be a result of platform
  misconfiguration of TEMPDIR and not PDL per se.


- 16bit image file IO fails in t/pic_16bit.t apparently due to
  an older version of NetPBM which does not support the raw 16bit
  formats.  If this test fails, try upgrading your NetPBM library.


- PDL on Cygwin has a 300MB process memory limit which can
  cause out of memory crashes with large data sets.


- The following SourceForge bugs are outstanding at time of the
  PDL-2.4.6_010 release:

  3013751    t/proj_transform.t fails for cygwin 1.7
  3011879    pdl() constructor crashes for mixed array ref/piddle args
  3011659    uniq fails when pdl contains nan
  2995500    perl -d chokes on lvalue functions
  2989905    PDL PROJ4 does not build on win32
  2946119    TriD garbled axis text
  2901814    Arrow keys don't work in perldl on win32 console
  2901810    Ctrl-C kills perldl in win32 console
  2901170    many warnings w TriD and perl -w
  2339818    need lib64 searches in Graphics::TriD  
  2153898    default PDL build output too long
  1994610    TriD build problem w pthreads
  1994584    PDL Has no signed 8-bit integer datatype
  1994442    imagrgb problems  (*new* see imag2d)
  1582350    badflag called in PDL::Core and PDL::Complex
  1505171    failure in MatrixOps::eigens in CVS
  1435189    Installation with cpan2rpm
  1205359    PGPLOT Window does not store full state info
  1059020    Problem with FFTW version 3.0.1


For more information on these and other PDL issues, and for
submissions of patches (bug patches are always welcome!), 
see the PDL mailing lists. Links to archive list discussions
and how to register for the mailing lists can be found at
http://pdl.sourceforge.net/maillists/ .
