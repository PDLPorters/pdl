Release Notes for PDL 2.007_03 --------------------------

 +---------------------------------------------------------------+
 | BE WARNED:  This release includes an update to the internal,  |
 | C-level PDL API for PDL versions 2.006 and earlier.  This     |
 | will require that you re-build any PP or XS modules.  Do not  |
 | upgrade or install over an existing PDL installation unless   |
 | you are prepared to do so!!!                                  |
 +---------------------------------------------------------------+

General Notes:

 * Another quick CPAN developers release

   - It is a snapshot of the current git development tree
     and everything may not work correctly or have complete
     documentation.

   - These release notes may not be fully complete.  Please
     see Changes (from the git log) for full details.

   - All tests may not pass, especially ones corresponding
     to issues in Known_problems.
   
   - Manual build/install is recommended although the
     cpan shell may be used by specifying the distribution
     path rather than just the module name, e.g.:

       cpan> get  CHM/PDL-2.007_03.tar.gz
       cpan> make CHM/PDL-2.007_03.tar.gz
       cpan> test CHM/PDL-2.007_03.tar.gz
       cpan> look CHM/PDL-2.007_03.tar.gz

Highlights:

 * TBD



Release Notes for PDL 2.007_02 --------------------------

 +---------------------------------------------------------------+
 | BE WARNED:  This release includes an update to the internal,  |
 | C-level PDL API for PDL versions 2.006 and earlier.  This     |
 | will require that you re-build any PP or XS modules.  Do not  |
 | upgrade or install over an existing PDL installation unless   |
 | you are prepared to do so!!!                                  |
 +---------------------------------------------------------------+

General Notes:

 * Another quick CPAN developers release

   - It is a snapshot of the current git development tree
     and everything may not work correctly or have complete
     documentation.

   - These release notes may not be fully complete.  Please
     see Changes (from the git log) for full details.

   - All tests may not pass, especially ones corresponding
     to issues in Known_problems.
   
   - Manual build/install is recommended although the
     cpan shell may be used by specifying the distribution
     path rather than just the module name, e.g.:

       cpan> get  CHM/PDL-2.007_02.tar.gz
       cpan> make CHM/PDL-2.007_02.tar.gz
       cpan> test CHM/PDL-2.007_02.tar.gz
       cpan> look CHM/PDL-2.007_02.tar.gz

Highlights:

 * This release should be a working PDL::IO::Storable that
   is compatable with the new 64bit index support.
 
 * PDL::IO::Storable now requires perl 5.10.x or greater
   although the overall distribution requirements are not
   planned to update to 5.10.x until the completion of
   fixes for the longlong hidden double precision conversion
   slash truncation bug.



Release Notes for PDL 2.007_01 --------------------------

 +---------------------------------------------------------------+
 | BE WARNED:  This release includes an update to the internal,  |
 | C-level PDL API for PDL versions 2.006 and earlier.  This     |
 | will require that you re-build any PP or XS modules.  Do not  |
 | upgrade or install over an existing PDL installation unless   |
 | you are prepared to do so!!!                                  |
 +---------------------------------------------------------------+

General Notes:

 * Another quick CPAN developers release

   - It is a snapshot of the current git development tree
     and everything may not work correctly or have complete
     documentation.

   - These release notes may not be fully complete.  Please
     see Changes (from the git log) for full details.

   - All tests may not pass, especially ones corresponding
     to issues in Known_problems.
   
   - Manual build/install is recommended although the
     cpan shell may be used by specifying the distribution
     path rather than just the module name, e.g.:

       cpan> get  CHM/PDL-2.007_01.tar.gz
       cpan> make CHM/PDL-2.007_01.tar.gz
       cpan> test CHM/PDL-2.007_01.tar.gz
       cpan> look CHM/PDL-2.007_01.tar.gz

Highlights:

 * Added FAQ entry on PDL version numbering change and how
   to specify required PDL versions.

 * Corrected perldl.conf docs for WITH_PLPLOT in the comments

 * Update PDL::IO::Storable to work with the new PDL_Indx
   data type.  Also made the code backwards compatible to
   read files written by older PDL releases.
 
 * Fixed NaN handling for min/max and cleaned up handling
   of empty sets.

 * Various enhancements to PDL::Transform



Release Notes for PDL 2.007 --------------------------

 +---------------------------------------------------------------+
 | BE WARNED:  This release includes an update to the internal,  |
 | C-level PDL API for PDL versions 2.006 and earlier.  This     |
 | will require that you re-build any PP or XS modules.  Do not  |
 | upgrade or install over an existing PDL installation unless   |
 | you are prepared to do so!!!                                  |
 +---------------------------------------------------------------+

General Notes:

 * PDL computations now use 64bit indexing/addressing if
   your platform supports it (i.e., your perl configuration
   has $Config{ivsize} == 8).
   
   - You can process with pdls with more then 2**32 elements.

   - Memory mapped file IO supports up to 8TB files which
     allows much simpler processing of large data files.
     (See mapflex in PDL::IO::FlexRaw for details)

 * PDL-2.007 has a new, unified slicing engine and syntax
   that consolidates the multiple slicing variants into
   a backward compatible but now 64bit aware slice.  See
   the PDL::Slices for the new syntax that is enabled.

 * PDL::FFTW has moved to its own distribution on CPAN
   and is no longer in the PDL core distribution.  Look
   for PDL::FFTW3 coming to CPAN soon.

 * Some required dependencies have been update to more
   recent versions:

   - ExtUtils::MakeMaker now requires version 6.56 or
     higher, the minimum version with CONFIGURE_REQUIRES
     support.

   - Perl OpenGL 0.6702 is now required for PDL::Graphics::TriD
     to build.  This fixes a number of critical bugs and should
     be a seamless upgrade.

   - File::Map version 0.57 is required.  This fixes map_anonymous
     support for the >2**32 sizes needed for 64bit support.
     Legacy mmap support for unix platforms is no longer
     supported.  The distribution requires File::Map so you
     should not notice the change.

 * Incompatible Changes:

   - PDL::FFT now uses the same sign convention as FFTW and
     the rest of the world, -1/+1 for forward and reverse
     FFT respectively.

   - C/XS API of PDL-2.007 is incompatible with previous
     PDL releases.  If you upgrade to PDL-2.007, you *will*
     need to re-install or upgrade *all* dependent XS or PP
     based modules.

   - PDL now auto-promotes array refs in many places that
     previously required a piddle (so you can say, e.g.,
     "$a->index([2,3])" instead of "$a->index(pdl(2,3))").

   - String syntax for slice() specifications now ignore
     white space.

 * The clean up of the PDL core distribution continues and
   PDL-2.007 is no exception.  Many bug fixes, documentation
   updates, code and implementation improvements make this
   the best testing PDL release to date.


Highlights:

 * FITS IO improvements and fixes:

   - Added 'afh" option to rfits to allow explicit use of
     legacy hash parser for performance reasons.  

   - New multiple extension writing support for wfits.

 * Added pp_deprecate_module() to PDL::PP

 * New mode/modeover functions in PDL::Ufunc

 * Made exception handling in slices more robust.

 * PDL::CLONE_SKIP added for improved ithread support.

 * Updated graticule() in PDL::Transform::Cartography to
   support NaN-delimited output.

 * Bugs fixes:

   - Fix %hash randomization bugs in PDL tests

   - Fix OpenBSD pthread build problem for non-threaded perls

   - Fix PDL::shape to return vector for 1-D piddles

   - Fix badvalue-on-truncate support for map and for interpND

   - Fix for MSVC++ 6.0 to build on 32bit systems.
     MSVC++ 6.0 cannot be used to build 64bit index support.

   - Fix polyfit() handling of BAD values and various edge cases.

   - Fix rare "Bizarre copy of HASH in scalar assignment"

   - Fix rcols with colsep and $PDL::undefval

   - Fix sf.net bug #331 "uniq does not always return proper object"

   - Fix sf.net bug #338 PDL::FFT uses backwards sign convention from FFTW

   - Make PDL::NiceSlice preserve line numbering (sf.net feature #75)

   - PDL::IO::GD->new() is now less picky about it args, and no longer crashes

   - Two bug fixes to transform.pd, and an augmentation



Release Notes for PDL 2.006 --------------------------

 +---------------------------------------------------------------+
 | BE WARNED:  This release includes an update to the internal,  |
 | C-level PDL API for PDL versions 2.4.10 and earlier.  This    |
 | will require that you re-build any PP or XS modules.  Do not  |
 | upgrade or install over an existing PDL installation unless   |
 | you are prepared to do so!!!                                  |
 +---------------------------------------------------------------+

General Notes:

 * Change to the version number scheme used for PDL
   from the dotted-integers format back to plain old
   decimal numbers.

   Unfortunately, PDL has used both alternatives before
   and in an inconsistent, out-of-order way.  With this
   release, the current version will also be the most
   recent version with respect to both numbering schemes.
   
   For more details see David Goldens blob post on
   the topic and the pdl-porters list discussion:

     http://www.dagolden.com/index.php/369/version-numbers-should-be-boring/
     http://mailman.jach.hawaii.edu/pipermail//pdl-porters/2013-February/005343.html
 

 * PDL-2.006 also showcases the demos of two new PDL graphics
   modules in the perldl/pdl2 shells:
   
    - PDL::Graphics::Gnuplot
      http://search.cpan.org/~zowie/PDL-Graphics-Gnuplot-1.4/

    - PDL::Graphics::Prima
      http://search.cpan.org/~dcmertens/PDL-Graphics-Prima-0.13/

   Both modules install on all supported PDL platforms.  A
   recent addition is PDL::Graphics::Simple which provides
   a uniform presentation to the variety off available PDL
   plot/view/print options.
   
    - PDL::Graphics::Simple
      http://search.cpan.org/~zowie/PDL-Graphics-Simple-1.004/README.pod
      
   Let us know how they work for you.  As they are 
   relatively "young" contributions your feedback and
   questions are always welcome.


 * PDL Distribution related updates:

    - Fixes a build issue for PDL at ASPerl
    
    - Many fixes for debian distributions.
    
    - PDL::IO::NDF has been moved to its own
      distribution on CPAN.  This could affect
      upgrades from older PDL installs.
 

Highlights:

 * New support for reading IDL format files via PDL::IO::IDL.

 * Added an unpdl method which is (roughly) the inverse
   operation of pdl (Joel Berger).

 * Updated polyfill and polyfillv routines to the algorithm
   from pnpoly: more accurate on edge pixels and faster due
   to its PP implementation (Tim Haines).

 * Added Boundary=>'Replicate' option to conv2d and med2d (chm).

 * Support for new additional random number generators to
   PDL::GSL (John Lapeyre).

 * Add lgamma support for MinGW-built perls with tests
   to match (sisyphus).

 * Many improvments to docs and their generation from
   PDL sources.  Specific new functionality support:

    - Newly refactored docs engine using core perl
      modules rather than PDL-only ones (Joel Berger)

    - New FullDoc key added to PDL::PP makes writing CPAN
      friendly .pd files much, much easier (David Mertens).

    - New PDL::Doc::add_module() routine to add an external
      module's POD (with PDL::Doc conventions) to the PDL
      docs on-line database (Craig DeForest).

 * Many bugs fixed, some even before a ticket could be opened!

    - Sf.net bug #3607936: Fixed a bug causing crashes
      due to using inplace with a duplicate argument.

    - Sf.net bug #3603249: AutoLoader leaks $_ into local
      context, reported and fixed by Craig.

    - Sf.net bug #3588182: Fixed hist() handling of the case
      of fractional steps in integral input data types.

    - Sf.net bug #3563903: Fixed bug in PNG format detection
      on win32 platforms.  

    - Sf.net bug #3544682: Fixed error report bug in perldl
      that resulted from a change in the way perl handles
      eval exception reporting.

    - Sf.net bug #3539760: qsort[vec] are now inplace aware.

    - Sf.net bug #3518190: Potential fix for t/gd_oo_tests.t
      test crashes.

    - Sf.net bug #3515759: Work around for PDL::GIS::Proj
      build failures with proj-4.8.0.

    - Sf.net bug #3479009: Fixed dummy() to generate a
      valid syntax for the underlying call to slice().

    - Sf.net bug #3475075: Fixed 16-bit PNM raw format handling.

    - Added warning if conv1d is used on a piddle with
      the badflag set.

    - Fix NaN sign issues as reported (and fixed!) by
      Matthew McGillis with contributions by Sisyphus.

    - Fix rim() 3-arg form.  Added tests to support and
      verify the development.

    - Fixed a problem with multiple windows and imag2d
      and imag2d_update.

 * The PDL shells keep getting better:

    - New feature in perldl and pdl2 where a pattern matching
      the PDL shell prompt (in $PERLDL::PREFIX_RE) will get
      stripped off of input lines before eval.  This makes it
      easier to cut-and-paste example text from PDL shell
      sessions or from the PDL Book into an active session.

    -  Added a demo for PDL::Graphics::Prima to the PDL shells.

    -  Added a demo for gnuplot to the PDL shells.

    -  The p shortcut to display output in the PDL shells has
       been reverted to its previous 2.4.10 behavior.  If you
       wish it to be an exact alias for print just override
       in your .perldlrc or local.perldlrc file.



Release Notes for PDL 2.4.11  -----------------------------

General Notes:

 * This is a point release of PDL to support the coming perl
   5.16.0 release.

 +---------------------------------------------------------------+
 | BE WARNED:  This release includes an update to the internal,  |
 | C-level PDL API and will require that you re-build any PP or  |
 | XS modules.  Do not upgrade or install over an existing PDL   |
 | installation unless you are prepared to do so!!!              |
 +---------------------------------------------------------------+


Highlights:

 * A new implementation mapflex and mapfraw routines provides
   memory-mapped IO for all platforms including win32 systems.

 * The new memory mapped IO support is implemented using
   File::Map so version 0.47 has been added as a required
   dependency to force automated testing so an automated build
   will need this dependency installed.
   
    NOTE: For systems having POSIX mmap, a manual build of
    PDL will automatically use the legacy implementation.

 * Various cleanup to existing code to fix warnings generated
   by perl versions 5.15.x and higher.
 
   Remove deprecation warning in PGPLOT/Window/Window.pm
   complex.pd - fix attempts to overload '<=>=' and '=>'

 * Sf.net bugs fixed:

    3518253  Make PDL::flat work under perl 5.16 (thanks sprout!)
    3516600  pdl_from_string.t fails w/ BADVAL_USENAN=1
    3487569  PDL::IO::Misc : rcols problem (thanks bperret!)
    3476648  PDL build of HTML docs fails on recent bleed Perl
    
 * Other bugs fixed:

    Fix check for glutRunning logic for imag2d
    Fixed a bug in cat's error reporting.
    Added lvalue awareness to whereND

 * New and improved tests have been added to the test suite.

    Tests t/gd_oo_tests.t and t/inline-comment-test.t are
    skipped for BSD platforms (see sf.net bugs #3518190 and
    #3524081 to track their issues).

 * New support for multi-line comments in PP code.  See docs for
   PDL::PP for details (e.g., pdldoc PP).
    
 * Various enhancements to barf/croak output and messages to make
   error reports and stack traces more useful and readable.

 * There is a new changes (or Changes) target for the PDL Makefile
   which is a convenience target that allows one to regenerate the
   Changes file from git.



Release Notes for PDL 2.4.10 --------------------------

General Notes:

 New Stuff:

  * PDL::Constants module provides E, PI, I (or J) and more.

  * PDL::NiceSlice has a new engine based on Filter::Simple
    which is more selective about where the PDL::NiceSlice
    sourcefilter is applied.

  * pdl() constructor now accepts a string argument which
    can include MATLAB-style [ ; ] syntax, bad values,
    inf values, and nan values.  This makes it much easier
    to specify pdl values in programs and scripts.

  * PDL now supports pthreads on all platforms as well
    as a new, auto-parallelization capability for PDL
    threadloops across multiple processors using the
    PDL::ParallelCPU module.

  * Many(!) bug fixes.


 Incompatible Changes:

  * List output from whichND is now deprecated.

  * The default.perldlrc uses PDL::Constants to
    provide E and PI.

  * perldl.conf has new fields so be sure to update
    any local versions you use with the new fields.

  * rcols and wcols always use dim0 for the data
    dimension and dim1 for the column dimension.
    This only matters if you use the support for
    reading multiple columns into a 2D pdl.

  * Makefile.PL now requires at least version 6.31
    of ExtUtils::MakeMaker to support the new standard
    INSTALL_BASE option matching Module::Build usage.

  * Prerequisite Text::Balanced minimum version is
    now 1.89 although this is not expected to be an
    issue because it is provided in the perl core
    since 5.8.0.


Highlights:

 * General cleanup of code, including restructuring for clarity.
 
 * List output from whichND() is now deprecated.  whichND() now returns
   a piddle of coordinates in all cases with a warning when a list
   context is detected.  See the docs for work-arounds to your code.
 
 * PDL::IO::Misc now has better support for handles that are not
   files (e.g., pipes or standard input) for rgrep(), rcols(),...
 
 * Added bad value support to pctover() and oddpctover().
   This was sf.net feature #3328001.
 
 * New whereND() routine provides the same functionality as where
   but with support for multi-dimensional masks and implicit
   threading over higher dimensions.  This was sf.net feature
   request #3390043.
 
 * Many bugs fixed.
 
     3059083  Problems with FITS header handling
     3080505  PLplot segfaults on plshades call on OS X
     3285520  status message from gslmroot_fsolver
     3294808  sever on Empty piddle causes segfault
     3295544  NiceSlice parsing bug
     3299611  FITS I/O obscure bug
     3300467  NiceSlice asterisk parsing issue
     3307121  wmpeg sometimes kills perldl if file already exists
     3307613  indexND of Empty pdls can segfault
     3368883  t/opengl.t fails if display type not available
     3375837  _read_flexhdr state machine fails
     3388862  tiny bug in PDL-2.4.3. May apply to 2.4.9
     3391645  bad printf formats in pdlapi.c and others
     3394327  PDL::IO::FITS::wfits corrupting FITS image
     3396738  PDL::Core::convert default return type
     3410905  t/pgplot.t hangs test harness for PDL
     3415115  whereND fails to handle all zero mask case
     3428356  PDL::Transform::map output FITS header is slightly wrong
     3434842  Error in definition of gsl_sf_laguerre_n function
 
 * PDL::Constants now provides: E, PI, I and J and is loaded by the
   default.perldlrc.  It is not yet part of 'use PDL' so you'll need
   to 'use PDL::Constants ...' by hand for now.
 
 * default.perldlrc sets $PDL::IO::FlexRaw::writeflexhdr=1 by
   default so that writeflex() to a filename automatically writes
   the header file.  This is different from the previous behavior
   but it seems to "do what you mean".  Feedback welcome!
 
 * PDL::NiceSlice now has a new engine based on Filter::Simple which
   is smarter about only applying the slicing source filter to syntax
   occurring outside of POD, comments, and quotelike strings.  The
   new implementation is available for *files* by setting the
   PDL_NICESLICE_ENGINE environment variable to 'Filter::Simple'.
 
   Work is underway to port the new niceslice filter implementation
   to perldl/pdl2.  Once this task is completed, the new engine will
   become the default source filter and the PDL_NICESLICE_ENGINE
   environment variable will be removed.
 
 * There is experimental support for PDL::NiceSlice syntax in the
   perl debugger (i.e., perl -d).  Just set the PERL5DB environment
   variable to 'BEGIN { require "PDLdb.pl" }' to use niceslice
   from the debugger command line.  If PERL5DB is already set,
   you'll need to adjust the above recipe accordingly.
 
 * Better handling of build configuration options from perldl.conf
   as well as improvements in the detection of external dependencies.
 
 * perldl.conf has some new fields added:
    - POSIX_THREADS_INC and POSIX_THREADS_LIBS to specify
          locations of your pthread header file and library
    - PDL_CONFIG_VERSION to track the perldl.conf VERSION
    - PDLDOC_IGNORE_AUTOLOADER to control pdldoc behavior
    - PDL_BUILD_DIR provides the build directory path
    - PDL_BUILD_VERSION provides the PDL build version
          (to help with ambiguity from multiple PDL installs)
 
   NOTE: If you are using a private or customized perldl.conf
   file, please be sure to update with these additional fields
   as the perl Makefile.PL doesn't yet detect version skew
   automatically.
  
 * PDL::IO::Browser now builds in many cases (but not all).
   If you try it, please let us know how it goes.  Just edit
   the value of WITH_IO_BROWSER in your perldl.conf before
   configuring the build (i.e., perl Makefile.PL).
 
 * PDL::PP has seen some significant improvements including
   code cleanup, improved documentation, and code refactoring
   for comprehension.  There is a new PDL::PP::pp_line_numbers()
   routine which enables line # traceback for errors and warnings
   from PP code.
 
 * Improved error output from the pdl2 shell via the new
   CleanErrors plugin which filters out the non-PDL part
   of the error output leading to *much* more concise and
   helpful reports.
 
 * The pdl() constructor now accepts a string argument which
   allows for writing pdls using a matlab/octave style
   syntax as well as cutting and pasting from interactive
   session output to create pdls initializations for scripts
   and program files.
   
   The new constructor also allows for inf, nan, and bad to
   generate the appropriate values (case insensitive), e.g.,
 
      $bad = pdl q[1 2 3 bad 5 6];  # Set fourth element to the bad value
      $bad = pdl q[1 2 3 BAD 5 6];  # ditto
      $bad = pdl q[1 2 inf bad 5];  # now third element is IEEE infinite value
      $bad = pdl q[nan 2 inf -inf]; # first value is IEEE nan value
 
   This is new functionality so feedback and problem reports
   are welcome.
 
 * PDL::Image2D has new routines: pnpoly() to determine the points
   in a polygon from the sequence of vertex coordinates, and
   cc4compt() for 4-component labeling of a binary image.
 
 * PDL now supports pdls larger than 2GiB.  The element count
   is still an int type internally so the total number of elements
   per-piddle must be less than 2**31.
 
 * POSIX threads (pthreads) are supported for win32 and cygwin
   platforms.  Pthreads are now available for all PDL platforms.
 
 * New PDL::ParallelCPU module provides automatic distribution
   of implicit thread loops across a number of processors.  Now
   you can watch your PDL computations maximize the load on
   *all* your processors.  See the docs for how to configure this
   feature and how to adjust your calculations to best take
   advantage of this feature.
 
 * PDL::Graphics::PLplot now works with the latest release of the
   PLplot library and has improved configuration and build
   handling.  Feedback welcome.
 
 * rcols() and wcols() now use the same convention for multi-column
   input and output: dim0 is *always* the data dimension and
   dim1 corresponds to the columns in the file.  This adjustment
   makes them their inverse operations.
 
 * The ADEV calculation in statsover has been corrected along
   with the documentation.
 
 * PDL::Graphics::TriD changes:
    - PDL::Graphics::TriD now builds using the perl OpenGL
          module (POGL) when configured on cygwin with the
          interface=W32API option.  By default, POGL used
          interface=GLX on cygwin which does software rendering
          via Mesa/X11 (slower!).  If you reinstall POGL with
          the W32API setting, you will need to rebuild PDL and
          PDL::Graphics::TriD to pick up the new configuration.
    - A new 4-line graphics demo contributed by Mark Baker has
          been added to 'demo 3dgal'.  Take a look.
 
 * Various enhancements to FITS handling, including:
   - add map() fix for nonlinear FITS headers
   - Enable hdrpcy() in rfits() for Rice-compressed images
 
 * Test suite improvements to provide better diagnostics from
   failures and to make tests more correct avoiding "false fails"
   in the test reports.  Various tests have been migrated to use
   File::Temp::tempdir and File::Temp::tempfile to improve the
   robustness for temporary files and directories naming and
   creation during tests.
 
 * Update ExtUtils::MakeMaker required version to 6.31 to support
   the new standard of INSTALL_BASE to configure for a local
   perl/PDL module installation.
 
 * Update Text::Balanced required version to 1.89.  This is the
   version present in perl 5.8.0 (the minimum required for PDL)
   so this change in requirement is not expected to affect any
   PDL users.
 
 * pdldoc now searches your PDLLIB path for PDL::AutoLoader docs
   in addition to the pre-extracted documentation database.  This
   makes pdldoc give the same output as the help command in the
   PDL shells.
 
 * Many updates and additions to the PDL documentation.
 
 * Devel::CheckLib is being used in more places during the
   PDL configuration stage.  We plan to make this the standard
   baseline for dependency library detection going forwards.
   The included copy of Devel::CheckLib has been updated to 0.95.
 
 * A new unified implementation of barf()/warn() for PDL removes
   code duplication.  barf() is now defined in both PDL::Core and
   the PDL packages.  PDL::cluck is added as an analog of Carp::cluck
   (as PDL::barf is an analog of Carp::confess).  barf() now
   generates its stack trace by hooking into Carp::confess on
   both the Perl and C sides.
 
 * Various fixes for PDL::Transform
   - fix inverse in perspective()
   - fix t_cubic() parameter parsing
   - fix handling of multiple PCi_j systems in the piddle header
 
 * Added SIGPIPE handlers to cases where PDL uses pipes to/from
   external processes (such as ffmpeg or some NetPBM image
   converter programs).  This should make PDL "SIGPIPE safe" by not
   exiting when a PDL piped IO output process quits (e.g., as when
   called from within the perldl/pdl2 shell).



Release Notes for PDL 2.4.9 --------------------------

General Notes:

 * Fixes a couple of surprise bugs that were discovered
   immediately with the PDL-2.4.8 release.

 * See Also: the Release Notes for PDL-2.4.8 below


Highlights:

 * Fix sf.net bug #3267408 "t/slice.t crashes in tests 68-70 for BSD"
 
 * Fix sf.net bug #3190227 "PDL build fails with parallel GNU make -j3 -j3"

 * Fixed various tempfile name generation problems by switching
   to File::Temp instead of hand rolled solutions.  This is the
   recommended approach going forward.

 * Force Convert::UU usage for BSD to work around a t/dumper.t
   failure on MirBSD.



Release Notes for PDL 2.4.8 --------------------------

General Notes:

 * The deprecated Karma imaging library support code
   has been removed from the PDL distribution.
 
 * Perl OpenGL (POGL) is now the only build option for
   3-D graphics support in PDL.  The POGL build has
   proven to be portable and reliable.  This prepares
   TriD graphics development for the next stage of
   re-factoring for support and new features.
 
 * Many improvements to the PDL configuration, build
   and test process make this the most robust PDL yet.
 
 * PDL::IO::FlexRaw now supports automatic header file
   creation when writeflex() is given a filename argument
   for writing.  readflex/writeflex/mapflex now support
   reading and writing piddles with bad values in them.
 
 * New PDL::Constants module provides PI and E.

 * PDL::Complex now supports in-place operations.

 * Added $PDL::toolongtoprint to set the maximum piddle
   size allowed to print as a string.  This was added
   to the default.perldlrc to make it easier to discover
   by users.

 * wmpeg() from PDL::IO::Pic uses the new ffmpeg back-end
   and can create many additional file formats beyond MPEG
   alone, including MP4 and animated GIF.  See the
   documentation for details.
 
 * Lots of improvements to the documentation, overall
   usability and many bugs fixed!

Highlights:

 Build and Test Enhancements:

 * Karma support code has been *removed* from the PDL
   distribution The last stable PDL distribution with
   Karma code was be PDL-2.4.7.
   
 * You must use the Perl OpenGL module to build the
   PDL 3-D graphics module, PDL::Graphics::TriD.
   OPENGL_LIBS, OPENGL_INC and OPENGL_DEFINE are no
   longer used by perldl.conf for the configuration
   process.
   
 * Added a check for mis-installed PROJ4 libraries.  If
   the library does not initialize (even if present) then
   PDL will not build the PROJ4 modules.  This is sf.net
   feature #3045456.
   
 * GD, HDF, PROJ4, OpenGL, and GSL tests will not be run
   unless the corresponding module was configured to be
   built.  This addresses the possibly mysterious test
   failures caused by previous PDL installations in the
   perl path at build time.
   
 * Use of the Test::More TODO {} blocks allows tests for
   known bugs to be added to the test suite without 
   causing the suite to fail.  This replaces the previous
   SKIP_KNOWN_PROBLEMS option and should better enable
   test first development and debugging.
   
 * utils/perldlpp.pl is a new script for off-line source
   filtering to pre-filter PDL source files with NiceSlice
   constructs.  This allows PDL to use NiceSlice constructs
   in the core functionality while still allowing PDL to
   work in environments where source filters are not supported.
   
 * The 'perl Makefile.PL' response to detecting another PDL
   in the build path has changed.  If such a pre-existing PDL
   installation is detected, the user is warned *but*
   configuration and build will proceed nonetheless.
   
 * Clean-up and fixes to demos and tests for reliability and
   portability.

 Documentation:

 * Added INTERNATIONALIZATION file with i18n notes.  PDL
   does yet not have internationalization support beyond
   that provided  by perl itself.
   
 * Cleared up the documentation on when to use lu_decomp
   and versus lu_decomp2.  Now that lu_decomp is threaded,
   it is the preferred implementation.
   
 * wmpeg() with the ffmpeg converter supports generation of
   many different output video file formats including MPEG,
   MP4, and animated GIF.  Documentation on these uses were
   added.

 * New example code refresh.pdl in Example/PLplot to
   provide for PLplot, some of the same functionality
   as in PDL::Graphics::PGPLOT.
   
 * Other documentation updates for clarity and correctness.

 New Features or Functionality:

 * New PDL::Constants module providing PI and E (so far)
   
 * Inplace support added for PDL::Complex operations
   
 * pdldoc and the pdl2/perldl help commands now print all
   matches by default when multiple matches are found.

 * A do_print command was added to the pdl2 shell which
   toggles the input mode between printing and not
   printing the return value of each command.
   
 * readflex/writeflex/mapflex now support reading and writing  
   piddles with bad values in them. This was sf.net feature
   request #3028127, "add badvalue support to FlexRaw".
   
 * writeflex now supports automatically calling the
   writeflexhdr() routine if you have set the variable
   $PDL::FlexRaw::writeflexhdr to a true value and are
   writing to a file given by filename as argument.
   
 * Updated the error handling for GSL::INTERP to match other
   GSL module usages.
   
 * Applied sf.net patch #3209075 IO::HDF square sds
   
 * New binary blob support in PDL::IO::GD::OO

 Bugs Fixed:

 * Applied Christian Soeller's patch for FFTW on 64-bit
   systems.  This resolves bug #3203480 "t/fftw.t fails
   on 64-bit systems".
   
 * Fixed sf.net bug #3172882 re broken threading in inv().
   inv() and lu_backsub() now handle threading.  Updated
   documentation for lu_decomp, lu_deomp2, and lu_backsub.
   
 * Fixed sf.net bug #3171702 "missing podselect command
   breaks PDL build"
   
 * Fixed sf.net bug #3185864 (bad adev in statsover)
   
 * Fixed sf.net bug #3139697: fixed imag2d() to work better
   with Mac OS X GLUT and not just FreeGLUT.
   
 * Fixed uniqind bug #3076570
   
 * Fixed SF bug #3057542: wmpeg doesn't error on missing
   ffmpeg program.  Now wmpeg returns 1 on success and
   undef on error.  If ffmpeg is not in PATH, it just fails
   immediately....
   
 * Fixed SF bug #3056142: pdl2 fallback to perldl broken
   on win32
   
 * Fixed SF bug #3042201: t/dumper.t fails mysteriously
   
 * Fixed SF bug #3031068: PDL::IO::FlexRaw mapflex memory
   mapping fails
   
 * Fixed SF bug #3011879, "pdl() constructor crashes perl for
   mixed ref/piddle args" and #3080505, and #3139088.  This
   fix also includes a larger and more complete set of tests.
   
 * Fixed segfault in plplot.t with a work-around.
   
 * Fixed bug in readenvi.pdl header list value processing
   and added support for embedded file headers.
   
 * Fixed bug in FlexRaw.pm support for headers with Type
   passed  as string.
   
 * Fixed imag2d() in PDL::Graphics2D.  It no longer calls
   exit on ESC if run within the pdl2/perldl shell.  Also
   did some clean up of key controls and module mechanics.
   
 * Fixed upstream bug in Devel::REPL for MultiLine
   continuation.  Now incomplete q[] and qq[] constructs
   continue reading until properly closed.  See the
   Known_problems file for details.


    
Release notes for PDL 2.4.7 --------------------------

General Notes:

 * New requirements:
   - perl version 5.8.x and higher
   - Convert::UU
 
 * PDL::Graphics::TriD now requires OpenGL-0.63
 
 * New 2-D image display routine: imag2d()

 * pdl() constructor, a.k.a. PDL->new(), now
   takes string arguments with either MATLAB type
   concatenation syntax or PDL print output (for
   easier cut-and-paste from PDL shell sessions).

 * Improved text and comma separated value file
   input via rcols(): faster and more flexible.
 
 * A new PDL shell based on Devel::REPL (i.e.,
   Moose technology).  The new shell supports
   more perl syntax (lexical variables and
   packages), is more extensible (via a system
   of plugins), and supports many forms of file
   and variable completion.
   
   Install Devel::REPL and give it a try!
   User feedback welcome.

 * More portability (builds on more platforms
   with more features than ever).

 * Many bugs fixed...


Highlights:

 * General

   OpenGL-0.63 is required for PDL::Graphics::TriD.

   Convert::UU is required for PDL.

   Karma is DEPRECATED and NOT SUPPORTED.  Set
   USE_KARMA=>1 in perldl.conf to force a build.
   
   
 * New 2D Image Display Feature: imag2d()

   See PDL::Graphics2D for documentation.

   Add image pixel value display on mouse
   click in imag2d window
   
   Add keyboard command shortcuts for imag2d
   (with placeholders)

   Fix a number of imag2d() usabiilty bugs
   
   
 * pdl() Constructor Can Take String Input

   Allows use of MATLAB-style [ ; ] syntax

   Allows cut-and-paste of printed pdl values
   as input args for pdl()
   
   
 * rcols/wcols Improvements

   Much faster read times

   Multiple columns can read into a single
   pdl varible

   Symmetric handling of perl and pdl
   column data

   Improved format support for CSV file input
   
   
 * Enhanced PDL Shell (Version 2)

   Based on Devel::REPL which must be installed
   along with either Term::ReadLine::Perl or
   Term::ReadLine::Gnu to use the pdl2 features.

   Supports Term::ReadLine::Perl and Term::ReadLine::Gnu.

   Upward compatable with the original PDL shell, perldl.

   Adds completion and command line editing support
   across all PDL platforms.

   Adds support for current package and lexical variables.

   Toggle default print output via the do_print attribute.

   Default prompt for perldl and pdl2 is now 'pdl> '

   help vars now shows results alphabetically

   pdl2 now runs (falls back to) perldl if Devel::REPL
   is not installed or if Term::ReadLine::(Perl|Gnu) is
   not installed.
   
   
 * Other Features

   Fix wmpeg() to use ffmpeg to generate the
   video (sf.net feature request #3010984).

   Added tiled compressed image handling to rfits

   Faster matrix multiply

   Preliminary support for ENVI file format data
   in PDL/IO/ENVI/readenvi.pdl
   
   
 * Build Improvements:

   PDL build process now detects multiple PDL installs
   and warns of possible conflicts.

   'use PDL' now loads PDL::Config by default.

   PDL "as built" configuration is now saved to %PDL::Config

   Changes file is automatically updated each release

   Add SKIP_KNOWN_PROBLEMS support for build

   Add checks to prevent warnings from access to $HOME
   when it is not defined.
   
   
 * Portability Fixes

   Multiple build improvements for debian platforms

   Improved portability across perl and compiler versions

   Reduced number of fortran dependencies

   Improved support for win32 platforms
   - PDL::GIS::Proj builds for win32
   - PDL::Transform::Proj4 builds for win32
   - PDL::Graphics::PLplot builds for win32
   - PDL::IO::Dumper builds for win32
   
   
 * 3-D Graphics

   Improved PDL::Graphics::TriD demos and examples

   Fixed problems with VRML support for many platforms.

   Better dependency searches for OpenGL during PDL build

   Removed warnings "noise" when used with perl -w

   New spheres3d routine added to PDL::Graphics::TriD
   
   
 * Bugs Fixed

   Fix PDL::AutoLoader to handle win32 PDLLIB path
   syntax with ; as separator. 

   Fix PDL::Complex::string and sum and sumover
   (sf.net bug #1176614)

   Fix PDL::Config does not match actual build
   configuration (sf.net bug #3030998).

   Fix dimension numbering in PDL::Transform::t_fits

   Fix jpegtopnm problem in proj_transform.t

   Fix rt.cpan.org bug #53815 in IO/HDF/SD/SD.pd

   Fix rt.cpan.org bug #59126 in isempty pod

   Fix sf.net bug #2901170 re overly verbose warnings when
   running TriD with perl -w

   Fix sf.net bug #3011143 re whitespace in perl path

   Fix sf.net bug #3021578 re missing xtra dummy dims

   Fix threading with lu_decomp and lu_backsub
   (sf.net bug #3021567)

   Fix uniq and uniqind NaN and BAD value handling
   (sf.net bug #3011659)

   Fix uniqvec bug where it did not return a 2-D result
   (sf.net bug #2978576)

   Fix uuencode/uudecode detection logic in PDL::IO::Dumper
   to include Convert::UU check

   Make PDL prompt/warn if space in build path
   (sf.net bug #2924854).

   Fix up code to not crash on non-lazy linking systems.

   Work arounds for perl-d lvalue temp bug introduced
   in recent perls.

   t/lvalue.t is skipped if run under the debugger. 

   Fix format string attack errors in GSL, PGPLOT,
   and Transform.
   
   
 * Many Documentation Improvements

   Completely reworked PDL web site
   - Clearer and more helpful to new PDL users.
   - See http://pdl.perl.org for the latest!
      
   New documentation:
   - Migration guide for MATLAB users.
   - Migration guide for Scilab users.
   - Threading tutorial.

   Major reorganization of documentation to better
   help new users
   - A guide to PDL's tutorial documentation.
   - A guide to PDL's module reference documentation.
   - A study course through all of PDL's documentation.
   - Removed PDL::Intro

   POD cleanup across many PDL modules and functions.

   Update to copyright statements throughout PDL
   to clarify licenses.

   Improved on-line help and apropos features in
   the PDL shell

   Updated FAQ

   Improved POD to HTML translation

   DEPENDENCIES for PDL updated and checked
   for applicability.

   INSTALL guides improved in the distribution
   and on the web site.



Release notes for PDL 2.4.6     --------------------------

General Notes:

 * Mainly a bug fix and polishing release


Highlights:

  * Improved 3D graphics and OpenGL functionality

  * imag2d() routine for multi-image (photo) display

  * Many fixes for Debian package release

  * Several little bugs fixed since PDL-2.4.5

  * Fixed some issues with PDL convolution routines

  * Improved documentation and release notes and files

  * Padre and enhanced perldl shell integration begun


Summary of Changes:

  * Improved 3D graphics and OpenGL functionality

    Perl OpenGL 0.62 is the minimum required version
    for PDL::Graphics::TriD to build.

    TriD now builds correctly for Mac OS X systems
    without X11 installed.

    Autoprobe for build of 3D graphics and the use
    of the Perl OpenGL library has been implemented.
    The default perldl.conf setting is to check.

    Improved multi-window support for PDL::Graphics::TriD
    display windows: the GLUT window ID is now part of
    the default window title for convenience, and redraws
    with multiple open TriD windows are handled correctly.
    
  * imag2d() routine for multi-image (photo) display

    REQUIRES: The Perl OpenGL TriD interface and FreeGLUT.

    IMPORTANT: Legacy X11 TriD is *not* supported!

    It is implemented in the imag2d.pdl file for autoloading
    via PDL::AutoLoader.  To use, copy the imag2d.pdl file
    to somewhere in your PDLLIB path or add the location to
    your PDLLIB environment variable.

    It works with multiple, simultaneous, image windows
    and appears to work side-by-side with TriD graphics
    windows.
    
    After you have imag2d.pdl in your @PDLLIB list,
    you can use 'help imag2d' to get usage instructions
    and documentation.
    
    This implements the basic functionality planned regarding
    an improved imagrgb() routine.

  * Many fixes for Debian package release

    This should allow PDL-2.4.6 to be more readily released
    as a Debian packages.  The general clean up involved
    improves PDL portability and robustness generally.

  * Several little bugs fixed since PDL-2.4.5

    The number of history lines when you use Term::ReadLine::Perl
    with perldl are now set correctly to $PERLDL::HISTFILESIZE.
    The default value is 500.

    A number of minor internal fixes for portability and
    implementation improvements:

     - Add comment re fix for defined(%hash) usage
     - Fix annoying PGPLOT::HANDLE warning message
     - Replace GIMME by GIMME_V in Core.xs
     - Update to v3.14 of ppport.h portability

    Fixed MINUIT build problem where non-standard code was
    being generated which caused problems with rigorous compiler
    settings.  This was SF bug #2524068.

  * Fixed a number of issues with PDL convolution routines

    conv1d() algorithm adjusted to match conv2D() and convolutionND().
    Documentation on the exact computation being performed in conv1d()
    was added.

    Fixes bug #2630369 with fftconvolve().  It now gives the same results
    as conv1d(), conv2d(),.., except perhaps with respect to the boundary
    condition handling.

  * Improved documentation and release notes and files

    Updated PDL::FAQ.

    Lots of little changes to bring documentation in line
    with current PDL functionality.  Volunteer editors and
    contributors always welcome!

  * Padre and enhanced perldl shell integration begun

    There is a new PDL-2.4.6/Padre/ subdirectory in the PDL
    source tree which contains work towards Padre integration
    and a 2nd generation, enhanced perldl shell for PDL.

    E.g. an *experimental* plug-in giving PDL::NiceSlice support
    to the Devel::REPL shell is included.  See the Padre/README
    file for instructions to get you started.



Release notes for PDL 2.4.5 ------------------------------

Highlights:

  * 3D graphics modules now run on win32 and Mac OS X
    systems without requiring X11 be installed.  The
    only prerequisites are OpenGL and FreeGLUT/GLUT.

  * Release documentation and FAQ have been updated
    to be more useful (and more accurate).

  * PDL build, test, and run time diagnostic messages
    have been make clearer and more helpful.

  * Many bugs have been fixed since PDL-2.4.4 so this
    is the most reliable PDL ever.

  * PDL now requires perl 5.6.2 or greater and has
    updated DEPENDENCIES information and code.  This
    should improve the buildability of PDL


General Notes:

  This is the first PDL release supporting the new build
  strategy for the PDL::Graphics::TriD modules.  The result
  is it now builds on more platforms than ever.  You'll
  need to install the OpenGL module and have FreeGLUT or
  GLUT (for Mac OS X) on your system.

  If you have problems with the new TriD build (that you
  did not have before), edit perldl.conf and set USE_POGL
  to 0.  That should enable you to build the legacy TriD
  code but you *will* want to submit a bug report, see the
  next point....

  IMPORTANT: Given the increased portability and generality
  of the new TriD interface approach, it is expected that
  the legacy TriD build interface (based on X11) will be
  deprecated soon (almost immediately) and removed after that.
  (N.B. It has been effectively unsupported for some time)

  If you are new to PDL, we recommend joining the perldl
  mailing list for discussion and questions.  See

    http://pdl.perl.org/?page=mailing-lists

  for how to sign up and links and searches of the list
  archive discussions.


Summary of Changes:
  
  New perldl.conf configuration parameters controlling
  build of TriD with perl OpenGL (a.k.a. POGL) with the
  follow default values:

    USE_POGL:
          1 -- build using POGL
          0 -- build using legacy build process
      undef -- build with POGL if possible

    POGL_VERSION:
       0.60 -- minimum required version of OpenGL

    POGL_WINDOW_TYPE:
     'glut' -- use a GLUT GUI for window creation
      'x11' -- use GLX and X11 for the GUI (this is a "compatibility
               mode" to support PDL::Graphics::TriD::Tk widgets)

  NOTE: Set WITH_3D => 0 in perldl.conf to disable the
  TriD build completely.  Just setting USE_POGL => 0 is
  not enough.
  
  The OpenGL tests in t/opengl.t now respects the interactive
  setting from the PDL_INT environment variable.

  Two TriD check programs, 3dtest.pl and line3d.pl, are added to the
  main PDL build directory.  They can be run as quick checks of the
  new functionality and are short enough run under the perl debugger
  if needed. e.g.

     perl -Mblib 3dtest.pl OR perl -Mblib line3d.pl


  OpenGL (a.k.a. GL) is the default TriD output device on all
  platforms.  VRML does not work at the moment.  GLpic is not
  tested but may work.

  Closed SF bug #1476324 by adding FAQ entry on clean installs

  Fix qsorti(null()) crash bug from SF bug #2110074.  Make
  qsorti() return quietly when given a null() piddle input

  Fix broken PP typemap finding code, thanks to CS for the
  final code and many testers!
  
  Fix t/autoload.t tilde expansion bugs and test failures.
  tilde expansion seems to work consistently with bash now

  Partial fix implemented for PDL::IO::Browser.  The code has
  only been tested with cygwin but it should work on systems
  with ncurses in the "right place".  This is **not tested**
  but set WITH_IO_BROWSER => 1 if you wish to try.

  If the perldl shell is unable to load PDL for some reason
  and defaults to basic perl support, the prompt now changes
  to perl> reflecting that fact.

  readflex() now works with File::LinearRaid.

  Many win32 fixes to tests and build process which make
  things work more smoothly on win32 platforms.

  See the Changes file or run 'git log --stat' for the detailed
  list of changes.
  


Release notes for PDL 2.4.4 ------------------------------

General Notes:

     - Bad value support is now enabled by default for
       PDL builds.  This feature allows simpler handling
       of missing or invalid data during processing.

       For example, missing pixels could be interpolated
       across.  Calculations could be skipped for
       missing data points...
       
       Edit the perldl.conf file to turn off bad value
       support before compiling if needed.

     - This release includes significant improvments
       in portability, enhancements in functionality,
       and *many* bugs fixed.

     - PDL::Graphics::TriD modules for 3-D and image
       visualization are being refactored for improved
       portability and performance.  Preliminary hooks
       are in PDL-2.4.4 to support the new functionality.
       
       Announcements to the perldl mailing list will be
       made when the PDL::Graphics::OpenGL::Perl and
       Term::ReadLine::FreeGLUT suport is on CPAN.

     - Builds out-of-the-box on cygwin and win32
     
     - perl 5.6.x is explicitly required to configure and
       will go away in future versions.  5.8.x and above
       are the recommended versions


Summary of Changes:

     - Improve uuencode support in Dumper for additional OSes
       such as *BSD varieties that may need additional options
       to prevent stripping of the leading slash in pathnames
       including: darwin, netbsd, openbsd, freebsd, and dragonfly.
      
     - Updated more PDL tests to use the recommended Test::More
      
     - Updated PDL::Graphics::PLplot build support for more 5.9.0
       specific features
      
     - AutoLoader ~ expansion has been updated to conform more
       closely to the ~ expansion in the bash shell
      
     - Better checks for a valid PROJ4 build environment are now
       performed before attempting to compile PDL modules using it
      
     - PDL now builds and runs on perl-5.10.x
      
     - The perldl shell has added support for using FreeGLUT for
       display in analogy with the existing Tk event loop support.
       This enables refactoring of the TriD modules to use the
       Perl OpenGL module (a.k.a. POGL) instead of the internal,
       and deprecated, PDL::Graphics::OpenGL et. al.
      
     - The perldl acquire/filter/execute loop is now $_-safe by
       using $lines instead of $_ for all the central modifications.
       Avoids problems with some AUTOLOAD functions that leaked $_.
      
     - Removed ExtUtils::F77 from the required prerequisites for
       PDL to improve the buildability on platforms without an
       available fortran compiler.  If you have a fortran compiler
       and EU::F77 installed, PDL::Slatec will be built.
      
     - zeros function added as an alias for the zeroes function
         
     - Many warning messages that were not actually problems have
       been quieted, especially many pointer to int conversion messages
      
     - Added $PERLDL::HISTFILESIZE to allow configuration of the number
       of lines of history to be saved by the interactive PDL shell.
      
     - Fixed implementation of the pctover() function to address bug
       #2019651 on sf.net.  Added explicit documentation in the code
       on the algorithm being used.
      
     - Various updates to the PDL FAQ
      
     - Implemented a PDL interface to the Minuit minimization library
       from CERN
      
     - Removed circular dependency in PDL Makefile.PL Makefile generation
       process which caused builds with some versions of make to fail
      
     - Multiple fixes to enhance configuration and build for win32
     
     - Added basic table-inversion to t_lookup for PDL::Transform
      
     - Fixed problem in uniqvec() where it failed to generate a correct
       result if all the input vectors were the same, fixed bug #1869760
      
     - Add improved 16-bit image support for IO with rpic() and wpic()
       provided you have a recent version of the NetPBM library that
       supports 16-bit images
      
     - Enabled building of GSL on Win32.
    


Release notes for PDL 2.4.3 ------------------------------

General Notes:

     - again, mainly a bugfix and polishing release.

     - builds out-of-the-box on cygwin and win32 build environment
       has been significantly improved
     
     - perl 5.6.x is now deprecated; 5.8.x is recommended.  Support
       for 5.6.x may go away in future versions.  


Summary of Changes:

     - PDL now builds under cygwin on windows PC including
       TriD(OpenGL) 3D graphics and PGPLOT and PLplot 2D graphics
       support. See PDL/cygwin/ and files README and INSTALL for
       details and how to build/install external dependencies.
     
     - The win32 build has been improved.  See PDL/win32/INSTALL
       for details.
     
     - Many fixes from the Debian build patches have been
       incorporated.  See PDL/debian for specifics.
     
     - 64bit platform build has been improved.
     
     - New functionality, functions and modules:
         
         * Bad value support has been extended to per-PDL bad
           values as an experimental feature. To use, configure
           WITH_BADVAL => 1 and BADVAL_PER_PDL => 1 in perldl.conf
           before building.

         * PDL::GSL::INTEG now supports the calculation of
           nested integrals

         * New function tcircle (threaded circle) added to 
           PDL::Graphics::PGPLOT This draws multiple circles in
           one go (see also tpoints and tline)

         * Added set operation routines for pdls treated as sets
           (help setops).

         * PDL::IO::GD module interface to the GD runtime image
           libaray (http://www.boutell.com/gd/) has been integrated.

         * The PDL::GIS::Proj and PDL::Transform::Proj4 modules
           to interface to the PROJ4 Cartographic Projections
           Library (http://proj.maptools.org/) have been added.

         * PDL::IO::HDF provides an interface to the HDF4
           library (http://hdf.ncsa.uiuc.edu/).
     
     
     - The PDL test suite (i.e. tests in in PDL/t) has been
       enhanced. Coverage has improved and output diagnostic
       messages are more useful. Test::More is becoming the
       preferred test module. The vanilla Test and Test::Simple
       may be deprecated in the future.

     - PDL core code has been fixed to address valgrind-detected
       errors and to enable better bad value support including the
       new experimental per-PDL bad values. These changes will
       require a re-build/install of any external modules using
       the C interface of PDL. See perldl.conf to configure the
       new bad value support.

     - Several TriD graphics build problems have been resolved.
       The TriD rotation bug has been fixed.

     - Many other bug fixes too numerous to mention. See the
       PDL/Changes file for details.

     - Multiple fixes and additions to PDL documentation as well
       as the PDL::FAQ.



Release notes for PDL 2.4.2 ------------------------------

General Notes:

     - again, mainly a bugfix and polishing release.
     
     - perl 5.6.x is now deprecated; 5.8.x is recommended.  Support
       for 5.6.x may go away in future versions.  

     - a little too late for Christmas; but happy new year 2005!


Summary of Changes:

 - Overhaul of FITS I/O.  FITS binary tables are now supported,
   for both reading and writing.

 - Many improvements to PLplot handling

 - New Graphics::Limits package determines display range for multiple 
   concurrent data sets

 - Better PDL::reduce function

 - Improvements to PDL::Transform

 - pdl() constructor is more permissive -- you can feed it PDLs and 
  it does the Right Thing most of the time.

 - Cleaner handling of config files

 - Improvements to multi-line parsing in the perldl shell

 - New 'pdl' command-line entry to perldl shell allows #!-style
   scripting (so you can re-use your journal files verbatim)

 - Several fixes for Microsoft Windows operation

 - PDL::undefval works properly, also has warning tripwires

 - statsover finally seems to produce meaningful, consistent RMS values

 - Several 64-bit compatibility issues (this work is probably not yet
  complete).

- Many small bug-fixes too numerous to list (see the Changes file).




Release notes for PDL 2.4.1 -------------------------------

General Notes:

     - mainly a bugfix and polishing release


Summary of Changes:

     - Fixed warnings with perl 5.8.2

     - Replace original m51.fits with freely distributable image

     - Upgrade PLplot interface for plplot-5.2.1 and perl 5.8.2

     - Improvement to documentation of autoloaded routines

     - Added more universal `whatis' function to perldl

     - Numerous small fixes/additions to docs/functions

     - Improved handling of empty piddles

     - Fixed most reported bugs


Release notes for PDL 2.4.0 -------------------------------

General Notes:

     - Perl 5.6.0 or later is now required, along with the modules
       Filter and Text::Balanced.

     - After installing PDL 2.4.0 external PDL modules will need to re-built.
       (any such modules will refuse to load until they have been re-built)
       
     - New demos of the PDL::Transform and PDL::Transform::Cartography
        modules have been added to perldl.
       Type 'demo transform' or 'demo cartography' in the perldl shell. 
        ( Note that PGPLOT is required to run )

Summary of Changes:

     - The NiceSlice syntax comes of age
       (Nice slicing has been around a while, but really needs to be 
        acknowledged as the main way of slicing PDLs...)

     - New GSL functionality: greatly improved access to the Gnu Scientific
       Library, including interpolation, finite-difference, random
       variable, and other routines.

     - New, very powerful indexing and slicing operators allow boundary 
          conditions   (range, indexND)

     - N-dimensional indexing (indexND) and selection (whichND) methods

     - Powerful syntax for coordinate transformation and arbitrary image
       resampling and coordinate transformations -- including high powered
       spatially-variable filtering (PDL::Transform module)

     - Support for major cartographic transformations
       (PDL::Transform::Cartography module)

     - New PLPlot graphics interface ( cleaner and faster than PGPLOT )

     - Many improvements to the PGPlot interface:
       * Strong FITS support (easy display of images, vectors, & contours in
            science coordinates)
       * Better vector graphic support [including improvements to line() and
         a new routine, lines()]
       * Much cleanup of errors and bugs
       * Spinlocks prevent interrupt-related PGPLOT crashes (requires Perl 5.8)
       * RGB output to truecolor devices (requires PGPLOT-5.3devel)

     - Improvements to the perldl shell:
       * Many bug fixes
       * Multi-line inputs to the perldl shell for easier cut-n-paste
       * ^D blocking on demand (controlled by perl variable or command-line 
          switch)
       * Autoloading detects error conditions on compile
       * New demos

    - Header copying is now explicit rather than by reference -- so that,
      e.g., FITS file manipulation is more intuitive and natural.

    - Improved support for Astro::FITS::Header

    - Bad value support is improved

    - Several new utility routines, including glue(), zcheck(), and ndcoords().

    - Better matrix operation support: matrix operations are now in 
        PDL::MatrixOps, and are all threadable.  Singular value decomposition,
        determinant, linear equation solving, matrix inversion, 
        eigenvalue decomposition, and LU-decomposition.

Release notes for PDL 2.3.4 -------------------------------

     - Now should compile using perl 5.8.0
     - Improved speed for generating PDL's from a perl array ref
     - Added PDL::IO::Storable, which enables PDL storage/retrieval
       using the Storable package.
     - Added  PDL::GSL::SF (Gnu Scientific Library, Special Functions) hierarchy
     - New % operator follows (mathematically correct) perl % operator behavior
     - Numerous Bug Fixes
        
  See the Changes file for a detailed list of changes.

Release notes for PDL 2.3.3 -------------------------------
  
  Mainly a bugfix release with some nice little additions:
     - PDL::IO::Dumper: Cleanly save and restore complex
        data structures including PDLs.  
     - Support for the new Astro::FITS::Header module
       (availiable on CPAN).
        
  See the Changes file for a detailed list of changes.

Release notes for PDL 2.3.2 ------------------------------

A pure bugfix release to fix compilation problems with gimp-perl
(part of the gimp distribution). The following notes from
2.3 and 2.3.1 still apply:

Release notes for PDL 2.3.1 ------------------------------

A bugfix release to fix some compilation problems seen with
2.3. The following notes from 2.3 still apply:

Release notes for PDL 2.3 -------------------------------
 
 Summary of Changes
   - A nicer slicing syntax for PDL added via the new 
     PDL::NiceSlice module.
   - Inline::Pdlpp module added, which enables in-line
     PDL::PP definitions. (i.e. no Makefiles, building
      hassles for creating PP code)
   - A Multitude of bug fixes, doc updates, and other
     changes.
     
  Note:Support for perl version 5.005 and previous is 
  limited in this release. Perl 5.6.0 or greater is
  recommended for full PDL functionality.
        
  See the Changes file for a detailed list of changes.
  
Release notes for PDL 2.2.1 -------------------------------
 
 Summary of Changes
    Bugs Fixed:
          - 'pow' function fixed in math.pd
          - Misc memory leaks fixed.
          - PGPLOT 'undefined window size' 
             bug fixed.
          - Test failures with opengl.t fixed.
          - Error in output of 'minimum_n_ind' function
            fixed.
            
    Misc Changes:
        - Documentation updates.
        - Updates to work with perl5.6.1
        
  See the Changes file for a detailed list of changes.
  
Release notes for PDL 2.2 -------------------------------

Major Changes:

  - 'Bad' Value Support added. With this option compiled-in, certain
     values in a PDL can be designated as 'Bad' (i.e. missing, empty, 
     etc). With this designation, most PDL functions will properly 
     ignore the 'Bad' values. See PDL::BadValues for details.
     
  - PGPLOT interface rewritten. New Features:
      - Interactive cursors (cursor)
      - Text on plots       (text)
      - Legends             (legend)
      - Circles, Rectangles, Ellipses
      - Multiple plot windows, one can jump from panel to panel when
        the window is divided in several.
      - More control over options - see PDL::Graphics::PGPLOTOptions for
        details.
      - New Examples in Example/PGPLOT.

   - Major updates to the Tri-D Code. Now requires perl 5.6 for TriD.
    
   - 'Reduce' function added. This provides a consistent interface to the
     projection routines (sumover, average, etc). See PDL::Reduce.
     
   - Improved OpenGL detection during 'perl Makefile.PL

   - pdldoc command added. This allows you to look up PDL 
     documentation similar to the perldoc command. 
     
   - Perl 5.6 is now recommended for PDL 2.2. It will still work 
     with perl 5.005, but some of the extra libs won't be compiled
     ( like Graphics/TriD).
  
Many other changes. See the Changes file for a detailed list of changes.

Release notes for PDL 2.1 -------------------------------

Major Changes:
  - Speed Increase. Most PDL functions are now done totally
    in C-code, without any perl wrapper functions as was done
    with previous versions. The speedup will be most noticeable
    for operations on many small PDL arrays.
  - Mem Leaks Fixed.
  - Added a consistent, Object-Oriented interface to the 
    various interpolate functions in PDL. (PDL::Func, 
    See Lib/Func.pm).
    
See the Changes file for a detailed list of changes.



Release notes for PDL 2.005 -----------------------------

A bugfix release to fix 2.004 problems with PGPLOT changes
and perl 5.6.0.

The following notes from 2.004 still apply:
                                             
*IMPORTANT NOTE*: Due to changes to the PGPLOT module, 'use
PDL::Graphics::PGPLOT' has been removed from PDL.pm (i.e. in scripts
and within perldl you now need to explicitly say 'use
PDL::Graphics::PGPLOT'). Additionally, it needs Karl's new 2.16
release of the PGPLOT module (available from CPAN).

Notable additions are a module for operations on complex piddles
(PDL::Complex), a subtype of PDL which allows manipulation of byte
type PDLs as N dimensional arrays of fixed length strings (PDL::Char)
and a Levenberg-Marquardt fitting module (PDL::Fit::LM).

Bug reports and patches to the relevant places on sourceforge, please.

