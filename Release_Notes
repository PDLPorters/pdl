Release notes for PDL 2.4.5 ------------------------------

Highlights:

  * 3D graphics modules now run on win32 and Mac OS X
    systems without requiring X11 be installed.  The
    only prerequisites are OpenGL and FreeGLUT/GLUT.

  * Release documentation and FAQ have been updated
    to be more useful (and more accurate).

  * PDL build, test, and run time diagnostic messages
    have been make clearer and more helpful.

  * Many bugs have been fixed since PDL-2.4.4 so this
    is the most reliable PDL ever.

  * PDL now requires perl 5.6.2 or greater and has
    updated DEPENDENCIES information and code.  This
    should improve the buildability of PDL

General Notes:

  This is the first PDL release supporting the new build
  strategy for the PDL::Graphics::TriD modules.  The result
  is it now builds on more platforms than ever.  You'll
  need to install the OpenGL module and have FreeGLUT or
  GLUT (for Mac OS X) on your system.

  If you have problems with the new TriD build (that you
  did not have before), edit perldl.conf and set USE_POGL
  to 0.  That should enable you to build the legacy TriD
  code but you *will* want to submit a bug report, see the
  next point....

  IMPORTANT: Given the increased portability and generality
  of the new TriD interface approach, it is expected that
  the legacy TriD build interface (based on X11) will be
  deprecated soon (almost immediately) and removed after that.
  (N.B. It has been effectively unsupported for some time)

  If you are new to PDL, we recommend joining the perldl
  mailing list for discussion and questions.  See

    http://pdl.sourceforge.net/maillists/

  for how to sign up and links and searches of the list
  archive discussions.

Summary of Changes:
  
  New perldl.conf configuration parameters controlling
  build of TriD with perl OpenGL (a.k.a. POGL) with the
  follow default values:

    USE_POGL:
          1 -- build using POGL
          0 -- build using legacy build process
      undef -- build with POGL if possible

    POGL_VERSION:
       0.60 -- minimum required version of OpenGL

    POGL_WINDOW_TYPE:
     'glut' -- use a GLUT GUI for window creation
      'x11' -- use GLX and X11 for the GUI (this is a "compatibility
               mode" to support PDL::Graphics::TriD::Tk widgets)

  NOTE: Set WITH_3D => 0 in perldl.conf to disable the
  TriD build completely.  Just setting USE_POGL => 0 is
  not enough.
  
  The OpenGL tests in t/opengl.t now respects the interactive
  setting from the PDL_INT environment variable.

  Two TriD check programs, 3dtest.pl and line3d.pl, are added to the
  main PDL build directory.  They can be run as quick checks of the
  new functionality and are short enough run under the perl debugger
  if needed. e.g.

     perl -Mblib 3dtest.pl OR perl -Mblib line3d.pl


  OpenGL (a.k.a. GL) is the default TriD output device on all
  platforms.  VRML does not work at the moment.  GLpic is not
  tested but may work.

  Closed SF bug #1476324 by adding FAQ entry on clean installs

  Fix qsorti(null()) crash bug from SF bug #2110074.  Make
  qsorti() return quietly when given a null() piddle input

  Fix broken PP typemap finding code, thanks to CS for the
  final code and many testers!
  
  Fix t/autoload.t tilde expansion bugs and test failures.
  tilde expansion seems to work consistently with bash now

  Partial fix implemented for PDL::IO::Browser.  The code has
  only been tested with cygwin but it should work on systems
  with ncurses in the "right place".  This is **not tested**
  but set WITH_IO_BROWSER => 1 if you wish to try.

  If the perldl shell is unable to load PDL for some reason
  and defaults to basic perl support, the prompt now changes
  to perl> reflecting that fact.

  readflex() now works with File::LinearRaid.

  Many win32 fixes to tests and build process which make
  things work more smoothly on win32 platforms.

  See the Changes file or run 'git log --stat' for the detailed
  list of changes.
  


Release notes for PDL 2.4.4_136 --------------------------

General Notes:

     *************************************
     *                                   *
     *   This is a development release   *
     *                                   *
     *************************************

  If you have OpenGL installed, PDL::Graphics::TriD should
  build out of the box for MSWin32, Mac OS X, and traditional
  unix platforms (linux, *bsd, solaris) using the new GLUT
  framework for the OS window creation and manipulation.

  IMPORTANT: Given the increased portability and generality of
  the new TriD interface approach, it is expected that the legacy
  TriD build interface (based on X11) will be deprecated soon
  (almost immediately) and removed after that.  It has been
  effectively unsupported for some time.

Summary of Changes:

  TriD now requires Perl OpenGL-0.59 or greater to build.

  The new PDL::Graphics::TriD is available on all platforms
  supporting Perl OpenGL (a.k.a. POGL).

     NOTE: There are two example programs at the top PDL/
     directory: 3dtest.pl and line3d.pl which you can use
     to exercise the TriD module: e.g.

       perl -Mblib 3dtest.pl OR perl -Mblib line3d.pl

  New, more portable code for finding the system typemaps files
  is implemented.

  IO::Browser now builds on cygwin and may work for other
  systems.  Set WITH_IO_BROWSER => 1, if you dare!

  The perldl shell now changes it prompt to perl> from the
  perldl> default if PDL was not able to be loaded.

  Clean up of the IO/GD/Makefile.PL for win32 platforms.

  See the Changes file or run 'git log --stat' for detailed
  list of changes.

  An example GLUT program using fonts, bitmap.c, is in the
  PDL top level directory.  If you have problems with font
  errors, try compiling this to see if the issue is a GLUT
  or FreeGLUT installation problem or in the PDL/Perl bindings.
  Contact the perldl mailing list for help.


Release notes for PDL 2.4.4_13 --------------------------

General Notes:

     *************************************
     *                                   *
     *   This is a development release   *
     *                                   *
     *************************************


Summary of Changes:

   To support development testing and unique identification for
   clearer communication, the pushes to git will have their
   version incremented in the last place after the _ along
   with updates to the prerequisite version in the use OpenGL
   statements.  If you cannot build PDL+POGL because of a
   missing OpenGL release version and you have not seen an
   announcement on the perldl mailing list of that developers
   release, you'll need to obtain it from the corresponding
   git repostory on sourceforge.

     There are two demo/test programs at the top PDL/ directory:
     3dtest.pl and line3d.pl which you can use to exercise the
     TriD module.  If those work ok for you, please feel free to
     try a 'perl -Mblib perldl' followed by 'demo 3d'.

   Now has Perl OpenGL-0.58_007 or greater as a CPAN prerequisite
   for testing the new TriD code using the Perl OpenGL module
   (a.k.a. POGL) to provide the bindings to OpenGL, GLU, and GLUT,
   in git only so far.

   The current release includes a patch to fix a reported problem
   locating the Mac OS X typemaps file.  Mac users, please report
   if you have failures due to this change.

   The code is believed to work on win32 systems, cygwin, and
   linux with the FreeGLUT interface and Mac OS X with the Apple
   GLUT implementation.

   By default, USE_POGL is set in the perldl.conf file to enable
   the new implementation.  Setting it to zero will enable the
   legacy implementation.  If you have to do this to get TriD
   working on a platform that already had it working, please let
   the developers know via the perldl mailing list!

   Once the correct operation of the new TriD code base is confirmed,
   the PDL developers snapshot is expected to be released as the
   PDL-2.4.5 official release.



Release notes for PDL 2.4.4_121 --------------------------

General Notes:

     *************************************
     *                                   *
     *   This is a development release   *
     *                                   *
     *************************************


Summary of Changes:

   To support development testing and unique identification for
   clearer communication, the pushes to git will have their
   version incremented in the last place after the _ along
   with updates to the prerequisite version in the use OpenGL
   statements.  If you cannot build PDL+POGL because of a
   missing OpenGL release version and you have not seen an
   announcement on the perldl mailing list of that developers
   release, you'll need to obtain it from the corresponding
   git repostory on sourceforge.

   Now has Perl OpenGL-0.58_007 or greater as a CPAN prerequisite
   for testing the new TriD code using the Perl OpenGL module
   (a.k.a. POGL) to provide the bindings to OpenGL, GLU, and GLUT,
   in git only so far.

   The current release includes a patch to fix a reported problem
   locating the Mac OS X typemaps file.  Mac users, please report
   if you have failures due to this change.

   The code is believed to work on win32 systems, cygwin, and
   linux with the FreeGLUT interface but testing has not yet
   confirmed win32 fully.  Mac OS X debugging is underway to
   resolve a GUI hang.  We're getting close but more tester
   feedback is always helpful.

   By default, USE_POGL is set in the perldl.conf file to enable
   the new implementation.  Setting it to zero will enable the
   legacy implementation.  If you have to do this to get TriD
   working on a platform that already had it working, please let
   the developers know via the perldl mailing list!

   Once the correct operation of this release is confirmed, it is
   expected to be released as the PDL-2.4.5 official release.



Release notes for PDL 2.4.4_09 ---------------------------

General Notes:

     *************************************
     *                                   *
     *   This is a development release   *
     *                                   *
     *************************************


Summary of Changes:

   Now has Perl OpenGL-0.58_004 or greater as a CPAN prerequisite for
   testing the new TriD refactoring.  Due to to changes and testing
   for TriD development, this release may be less stable than usual.

   Use option USE_POGL in perldl.conf to toggle the legacy TriD
   code versus the new OpenGL (POGL) based code.  Feedback from
   different platforms encouraged!

   NOTE: USE_POGL is enabled by default for testing purposes.



Release notes for PDL 2.4.4_08 ---------------------------

General Notes:

     *************************************
     *                                   *
     *   This is a development release   *
     *                                   *
     *************************************


Summary of Changes:

   PDL::Graphics::TriD builds on current cygwin systems.
   The locations of include files and the MESA functionality
   work arounds changed since the PDL-2.4.3 release.



Release notes for PDL 2.4.4_07 ---------------------------

General Notes:

     *************************************
     *                                   *
     *   This is a development release   *
     *                                   *
     *************************************

   The original, pre-CVS to git migration changes are listed in
   Changes_CVS and Changes contains the output from git log --stat
   since April 2009.

   Data::Dumper v2.121 and Storable v1.03 are now explicit
   prerequisites to the PDL build.  This should give better
   diagnostics and makes clear that these modules are essential
   to PDL IO functionality.

   Continue minor fixes and cleanup to main PDL file tree.


Summary of Changes:

    Make Data::Dumper v 2.121 the minimum required

    Avoid lvalue sub syntax requirements
    
    Rework storable test to use Test::More
    
    Fix t/autoload.t test when echo ~ gives ~
    


Release notes for PDL 2.4.4_06 ---------------------------

General Notes:

     *************************************
     *                                   *
     *   This is a development release   *
     *                                   *
     *************************************

     This is another developers release of the latest git PDL.
     More code cleanup, added diagnostics, and updating the
     various documentation.

     The old (pre-git) Changes file has been renamed Changes_CVS
     and the new Changes file is generated from the output of the
     git log --stat command.  This should make it easier to keep
     the changes file up to date.  Any developer or interested
     user can download the full repository and run git log to see
     all the history in its glory.

Summary of Changes:

   Move Changes to Changes_CVS to prep for git log

     We plan to move from a manual Changes file to an automatically
     generated one extracted from the git log messages.  The initial
     command is "git log --stat" and will be added to the make dist
     command eventually.  For now, just generate by hand before making
     a CPAN distribution.

   Added PERL5OPT unset for podselect command

     Missed the podselect in Basic/Gen/Makefile.PL.
     This unsets PERL5OPT before running podselect
     in the generated Makefile.  That should prevent
     false failures due to Devel::Autoflush not being
     available...

   Make tilde test check against `echo ~` result

     Since the goal is to give the same result as the
     shell (i.e. bash) expansion of ~, and since all the
     false test failures had the PDL::AutoLoader giving
     the same result as `echo ~`, I've just made that
     the result to check against.

   Win32 - MSVC-specific fix for setvaltobad() for PDL_Float
   
     In Basic/Bad/bad.pd:
     Provide special handling for setvaltobad() wrt PDL_Float piddles.
     Applies only to MSVC++ compilers prior to version 8.0.
     Thanks to creamygoodness, BrowserUk, ig and ELISHEVA:
     http://www.perlmonks.org/index.pl?node_id=781347

   Win32 - Reduce scope of MSVC-specific bugfix

     Some MS compiler bugs have been fixed in later
     versions of the compiler.
     This allows us to change each occurrence of:
     #ifdef _MSC_VER
       to:
     #if defined _MSC_VER && _MSC_VER < 1400

   Basic/Core/Dev.pm - tweak setting of WriteMakefile() LIBS

     Instead of specifying LIBS=>[] (on those occasions when LIBS
     should be empty) pdlpp_stdargs_int() and pdlpp_stdargs() would
     have LIBS=>[''] and LIBS=>[' '] respectively.
     Minor rewrite to pdlpp_stdargs_int() and pdlpp_stdargs() to fix this.

   Added $! to another Basic/Core/Dev.pm die message
   Added $! to Basic/Core/Dev.pm tempfile error

     The die when trylink failed to open its temporary
     output file did not include the system error reported.
     That has been added to the output to improve debugging.

   Added diag print for t/dumper.t small sdump()

     There have been persistent t/dumper.t failures
     on some BSD platforms.  Adding a diag() to print
     the result of the first sdump() string to give
     a clue as to what the problem is.

   Fix readflex() to work with File::LinearRaid

     readflex() in IO/FlexRaw/FlexRaw.pm use method syntax for
     read with an input file handle.  This failed with a tied
     file handle as is used by File::LinearRaid.  Replacing the
     usage $d->read(...) by read($d, ...) fixed the incompatibility.
     I don't know if it should have worked the other way or not.

   Fold in [dn]make correction to PERL5OPT fix

     The "fix" for the -MDevel::Autoflush did not
     work with dmake or nmake (presumably because of
     the non-sh command shell).



Release notes for PDL 2.4.4_05 ---------------------------

General Notes:

     *************************************
     *                                   *
     *   This is a development release   *
     *                                   *
     *************************************


Summary of Changes:

     This is a quick release to fix a missing TAB
     in the Makefile.PL generation for the podselect
     problem.  All else is the same as PDL-2.4.4_04.



Release notes for PDL 2.4.4_04 ---------------------------

General Notes:

     *************************************
     *                                   *
     *   This is a development release   *
     *                                   *
     *************************************

     PDL now requires perl 5.6.2 or higher.

     More incremental bug fixes along the way to a
     PDL-2.4.5 release which is planned to have the
     reworked 3D graphics support.


Summary of Changes:

        Updated the top level readme type files to correct
        link information, remove cvs references, and to add
        information on changes and outstanding issues.

        Fixed a bug in the t/autoload.t tests that resulted in
        false fails for the now fixed tilde expansion.

        Add cast to $GENERIC(a) for setvaltonan() to improve support
        for non-double piddles.

        Continue to clean up the default release and development files
        following the migration from cvs to git.

        PDL now explicitly requires perl 5.6.2 or above.
        
          No PASSes have been reported to CPAN Testers
          for PDL with perl 5.6.0 or 5.6.1, ever.  This
          modification sets better expectations for PDL users.

        Update FAQ for CVS->Git migration

        Change $PDL::VERSION to 2.4.4_03git for devel

        Fix t/proj_transform to skip when no earth_image()

          Missing jpegtopnm functionality in NetPBM or other
          causes earth_image() to fail on some platforms.
          This modifies the test to skip the remaining tests
          if earth_image() can not be loaded.



Release notes for PDL 2.4.4_03 ---------------------------

General Notes:

     *************************************
     *                                   *
     *   This is a development release   *
     *                                   *
     *************************************

     t/proj_transform fails due to problem
     loading the input data via the
     earth_image() routine. Debugging has
     been added.

     t/pic_16bit fails because of an old
     netpbm version. Clean up by adding
     a config variable whether 16bit raw
     PNM are allowed and honor that in
     the rpic/wpic code. Skip tests if
     appropriate.  TODO

     t/storable.t failure to load compiled
     module waiting on detailed test run from
     reporter.  TODO

     CPAN sets PERL5OPT=-MDevel::Autoflush
     but this is problematic with perl
     scripts run under controlled
     environments. Need to figure out a way
     around this.  TODO

     "No rule to make target pptemplate
     needed by pptemplate.pod" which may be
     a make specific problem, related to the
     version of EU::MM or something else...
     Need to request Basic/Gen Makefile
     output and make program and EU::MM info
     from reporter.  TODO


Summary of Changes:

     TBD


Release notes for PDL 2.4.4_02 ---------------------------

General Notes:

     *************************************
     *                                   *
     *   This is a development release   *
     *                                   *
     *************************************

Summary of Changes:

     TBD


Release notes for PDL 2.4.4_01 ---------------------------

General Notes:

     *************************************
     *                                   *
     *   This is a development release   *
     *                                   *
     *************************************

Summary of Changes:

     - Several SF.net bugs have been fixed

     - pctover() and oddpctover() should generate more accurate
       results with greater consistency to MS Excel calculations

     - PDL should pass automated build tests on more platforms


Release notes for PDL 2.4.4 ------------------------------

General Notes:

     - Bad value support is now enabled by default for
       PDL builds.  This feature allows simpler handling
       of missing or invalid data during processing.

       For example, missing pixels could be interpolated
       across.  Calculations could be skipped for
       missing data points...
       
       Edit the perldl.conf file to turn off bad value
       support before compiling if needed.

     - This release includes significant improvments
       in portability, enhancements in functionality,
       and *many* bugs fixed.

     - PDL::Graphics::TriD modules for 3-D and image
       visualization are being refactored for improved
       portability and performance.  Preliminary hooks
       are in PDL-2.4.4 to support the new functionality.
       
       Announcements to the perldl mailing list will be
       made when the PDL::Graphics::OpenGL::Perl and
       Term::ReadLine::FreeGLUT suport is on CPAN.

     - Builds out-of-the-box on cygwin and win32
     
     - perl 5.6.x is explicitly required to configure and
       will go away in future versions.  5.8.x and above
       are the recommended versions

Summary of Changes:

     - Improve uuencode support in Dumper for additional OSes
       such as *BSD varieties that may need additional options
       to prevent stripping of the leading slash in pathnames
       including: darwin, netbsd, openbsd, freebsd, and dragonfly.
      
     - Updated more PDL tests to use the recommended Test::More
      
     - Updated PDL::Graphics::PLplot build support for more 5.9.0
       specific features
      
     - AutoLoader ~ expansion has been updated to conform more
       closely to the ~ expansion in the bash shell
      
     - Better checks for a valid PROJ4 build environment are now
       performed before attempting to compile PDL modules using it
      
     - PDL now builds and runs on perl-5.10.x
      
     - The perldl shell has added support for using FreeGLUT for
       display in analogy with the existing Tk event loop support.
       This enables refactoring of the TriD modules to use the
       Perl OpenGL module (a.k.a. POGL) instead of the internal,
       and deprecated, PDL::Graphics::OpenGL et. al.
      
     - The perldl acquire/filter/execute loop is now $_-safe by
       using $lines instead of $_ for all the central modifications.
       Avoids problems with some AUTOLOAD functions that leaked $_.
      
     - Removed ExtUtils::F77 from the required prerequisites for
       PDL to improve the buildability on platforms without an
       available fortran compiler.  If you have a fortran compiler
       and EU::F77 installed, PDL::Slatec will be built.
      
     - zeros function added as an alias for the zeroes function
         
     - Many warning messages that were not actually problems have
       been quieted, especially many pointer to int conversion messages
      
     - Added $PERLDL::HISTFILESIZE to allow configuration of the number
       of lines of history to be saved by the interactive PDL shell.
      
     - Fixed implementation of the pctover() function to address bug
       #2019651 on sf.net.  Added explicit documentation in the code
       on the algorithm being used.
      
     - Various updates to the PDL FAQ
      
     - Implemented a PDL interface to the Minuit minimization library
       from CERN
      
     - Removed circular dependency in PDL Makefile.PL Makefile generation
       process which caused builds with some versions of make to fail
      
     - Multiple fixes to enhance configuration and build for win32
     
     - Added basic table-inversion to t_lookup for PDL::Transform
      
     - Fixed problem in uniqvec() where it failed to generate a correct
       result if all the input vectors were the same, fixed bug #1869760
      
     - Add improved 16-bit image support for IO with rpic() and wpic()
       provided you have a recent version of the NetPBM library that
       supports 16-bit images
      
     - Enabled building of GSL on Win32.
    

Release notes for PDL 2.4.3 ------------------------------

General Notes:

     - again, mainly a bugfix and polishing release.

     - builds out-of-the-box on cygwin and win32 build environment
       has been significantly improved
     
     - perl 5.6.x is now deprecated; 5.8.x is recommended.  Support
       for 5.6.x may go away in future versions.  


Summary of Changes:

     - PDL now builds under cygwin on windows PC including
       TriD(OpenGL) 3D graphics and PGPLOT and PLplot 2D graphics
       support. See PDL/cygwin/ and files README and INSTALL for
       details and how to build/install external dependencies.
     
     - The win32 build has been improved.  See PDL/win32/INSTALL
       for details.
     
     - Many fixes from the Debian build patches have been
       incorporated.  See PDL/debian for specifics.
     
     - 64bit platform build has been improved.
     
     - New functionality, functions and modules:
         
         * Bad value support has been extended to per-PDL bad
           values as an experimental feature. To use, configure
           WITH_BADVAL => 1 and BADVAL_PER_PDL => 1 in perldl.conf
           before building.

         * PDL::GSL::INTEG now supports the calculation of
           nested integrals

         * New function tcircle (threaded circle) added to 
           PDL::Graphics::PGPLOT This draws multiple circles in
           one go (see also tpoints and tline)

         * Added set operation routines for pdls treated as sets
           (help setops).

         * PDL::IO::GD module interface to the GD runtime image
           libaray (http://www.boutell.com/gd/) has been integrated.

         * The PDL::GIS::Proj and PDL::Transform::Proj4 modules
           to interface to the PROJ4 Cartographic Projections
           Library (http://proj.maptools.org/) have been added.

         * PDL::IO::HDF provides an interface to the HDF4
           library (http://hdf.ncsa.uiuc.edu/).
     
     
     - The PDL test suite (i.e. tests in in PDL/t) has been
       enhanced. Coverage has improved and output diagnostic
       messages are more useful. Test::More is becoming the
       preferred test module. The vanilla Test and Test::Simple
       may be deprecated in the future.

     - PDL core code has been fixed to address valgrind-detected
       errors and to enable better bad value support including the
       new experimental per-PDL bad values. These changes will
       require a re-build/install of any external modules using
       the C interface of PDL. See perldl.conf to configure the
       new bad value support.

     - Several TriD graphics build problems have been resolved.
       The TriD rotation bug has been fixed.

     - Many other bug fixes too numerous to mention. See the
       PDL/Changes file for details.

     - Multiple fixes and additions to PDL documentation as well
       as the PDL::FAQ.



Release notes for PDL 2.4.2 ------------------------------

General Notes:

     - again, mainly a bugfix and polishing release.
     
     - perl 5.6.x is now deprecated; 5.8.x is recommended.  Support
       for 5.6.x may go away in future versions.  

     - a little too late for Christmas; but happy new year 2005!

Summary of Changes:

 - Overhaul of FITS I/O.  FITS binary tables are now supported,
   for both reading and writing.

 - Many improvements to PLplot handling

 - New Graphics::Limits package determines display range for multiple 
   concurrent data sets

 - Better PDL::reduce function

 - Improvements to PDL::Transform

 - pdl() constructor is more permissive -- you can feed it PDLs and 
  it does the Right Thing most of the time.

 - Cleaner handling of config files

 - Improvements to multi-line parsing in the perldl shell

 - New 'pdl' command-line entry to perldl shell allows #!-style
   scripting (so you can re-use your journal files verbatim)

 - Several fixes for Microsoft Windows operation

 - PDL::undefval works properly, also has warning tripwires

 - statsover finally seems to produce meaningful, consistent RMS values

 - Several 64-bit compatibility issues (this work is probably not yet
  complete).

- Many small bug-fixes too numerous to list (see the Changes file).




Release notes for PDL 2.4.1 -------------------------------

General Notes:

     - mainly a bugfix and polishing release

Summary of Changes:

     - Fixed warnings with perl 5.8.2

     - Replace original m51.fits with freely distributable image

     - Upgrade PLplot interface for plplot-5.2.1 and perl 5.8.2

     - Improvement to documentation of autoloaded routines

     - Added more universal `whatis' function to perldl

     - Numerous small fixes/additions to docs/functions

     - Improved handling of empty piddles

     - Fixed most reported bugs


Release notes for PDL 2.4.0 -------------------------------

General Notes:

     - Perl 5.6.0 or later is now required, along with the modules
       Filter and Text::Balanced.

     - After installing PDL 2.4.0 external PDL modules will need to re-built.
       (any such modules will refuse to load until they have been re-built)
       
     - New demos of the PDL::Transform and PDL::Transform::Cartography
        modules have been added to perldl.
       Type 'demo transform' or 'demo cartography' in the perldl shell. 
        ( Note that PGPLOT is required to run )

Summary of Changes:

     - The NiceSlice syntax comes of age
       (Nice slicing has been around a while, but really needs to be 
        acknowledged as the main way of slicing PDLs...)

     - New GSL functionality: greatly improved access to the Gnu Scientific
       Library, including interpolation, finite-difference, random
       variable, and other routines.

     - New, very powerful indexing and slicing operators allow boundary 
          conditions   (range, indexND)

     - N-dimensional indexing (indexND) and selection (whichND) methods

     - Powerful syntax for coordinate transformation and arbitrary image
       resampling and coordinate transformations -- including high powered
       spatially-variable filtering (PDL::Transform module)

     - Support for major cartographic transformations
       (PDL::Transform::Cartography module)

     - New PLPlot graphics interface ( cleaner and faster than PGPLOT )

     - Many improvements to the PGPlot interface:
       * Strong FITS support (easy display of images, vectors, & contours in
            science coordinates)
       * Better vector graphic support [including improvements to line() and
         a new routine, lines()]
       * Much cleanup of errors and bugs
       * Spinlocks prevent interrupt-related PGPLOT crashes (requires Perl 5.8)
       * RGB output to truecolor devices (requires PGPLOT-5.3devel)

     - Improvements to the perldl shell:
       * Many bug fixes
       * Multi-line inputs to the perldl shell for easier cut-n-paste
       * ^D blocking on demand (controlled by perl variable or command-line 
          switch)
       * Autoloading detects error conditions on compile
       * New demos

    - Header copying is now explicit rather than by reference -- so that,
      e.g., FITS file manipulation is more intuitive and natural.

    - Improved support for Astro::FITS::Header

    - Bad value support is improved

    - Several new utility routines, including glue(), zcheck(), and ndcoords().

    - Better matrix operation support: matrix operations are now in 
        PDL::MatrixOps, and are all threadable.  Singular value decomposition,
        determinant, linear equation solving, matrix inversion, 
        eigenvalue decomposition, and LU-decomposition.

Release notes for PDL 2.3.4 -------------------------------

     - Now should compile using perl 5.8.0
     - Improved speed for generating PDL's from a perl array ref
     - Added PDL::IO::Storable, which enables PDL storage/retrieval
       using the Storable package.
     - Added  PDL::GSL::SF (Gnu Scientific Library, Special Functions) hierarchy
     - New % operator follows (mathematically correct) perl % operator behavior
     - Numerous Bug Fixes
        
  See the Changes file for a detailed list of changes.

Release notes for PDL 2.3.3 -------------------------------
  
  Mainly a bugfix release with some nice little additions:
     - PDL::IO::Dumper: Cleanly save and restore complex
        data structures including PDLs.  
     - Support for the new Astro::FITS::Header module
       (availiable on CPAN).
        
  See the Changes file for a detailed list of changes.

Release notes for PDL 2.3.2 ------------------------------

A pure bugfix release to fix compilation problems with gimp-perl
(part of the gimp distribution). The following notes from
2.3 and 2.3.1 still apply:

Release notes for PDL 2.3.1 ------------------------------

A bugfix release to fix some compilation problems seen with
2.3. The following notes from 2.3 still apply:

Release notes for PDL 2.3 -------------------------------
 
 Summary of Changes
   - A nicer slicing syntax for PDL added via the new 
     PDL::NiceSlice module.
   - Inline::Pdlpp module added, which enables in-line
     PDL::PP definitions. (i.e. no Makefiles, building
      hassles for creating PP code)
   - A Multitude of bug fixes, doc updates, and other
     changes.
     
  Note:Support for perl version 5.005 and previous is 
  limited in this release. Perl 5.6.0 or greater is
  recommended for full PDL functionality.
        
  See the Changes file for a detailed list of changes.
  
Release notes for PDL 2.2.1 -------------------------------
 
 Summary of Changes
    Bugs Fixed:
          - 'pow' function fixed in math.pd
          - Misc memory leaks fixed.
          - PGPLOT 'undefined window size' 
             bug fixed.
          - Test failures with opengl.t fixed.
          - Error in output of 'minimum_n_ind' function
            fixed.
            
    Misc Changes:
        - Documentation updates.
        - Updates to work with perl5.6.1
        
  See the Changes file for a detailed list of changes.
  
Release notes for PDL 2.2 -------------------------------

Major Changes:

  - 'Bad' Value Support added. With this option compiled-in, certain
     values in a PDL can be designated as 'Bad' (i.e. missing, empty, 
     etc). With this designation, most PDL functions will properly 
     ignore the 'Bad' values. See PDL::BadValues for details.
     
  - PGPLOT interface rewritten. New Features:
      - Interactive cursors (cursor)
      - Text on plots       (text)
      - Legends             (legend)
      - Circles, Rectangles, Ellipses
      - Multiple plot windows, one can jump from panel to panel when
        the window is divided in several.
      - More control over options - see PDL::Graphics::PGPLOTOptions for
        details.
      - New Examples in Example/PGPLOT.

   - Major updates to the Tri-D Code. Now requires perl 5.6 for TriD.
    
   - 'Reduce' function added. This provides a consistent interface to the
     projection routines (sumover, average, etc). See PDL::Reduce.
     
   - Improved OpenGL detection during 'perl Makefile.PL

   - pdldoc command added. This allows you to look up PDL 
     documentation similar to the perldoc command. 
     
   - Perl 5.6 is now recommended for PDL 2.2. It will still work 
     with perl 5.005, but some of the extra libs won't be compiled
     ( like Graphics/TriD).
  
Many other changes. See the Changes file for a detailed list of changes.

Release notes for PDL 2.1 -------------------------------

Major Changes:
  - Speed Increase. Most PDL functions are now done totally
    in C-code, without any perl wrapper functions as was done
    with previous versions. The speedup will be most noticeable
    for operations on many small PDL arrays.
  - Mem Leaks Fixed.
  - Added a consistent, Object-Oriented interface to the 
    various interpolate functions in PDL. (PDL::Func, 
    See Lib/Func.pm).
    
See the Changes file for a detailed list of changes.



Release notes for PDL 2.005 -----------------------------

A bugfix release to fix 2.004 problems with PGPLOT changes
and perl 5.6.0.

The following notes from 2.004 still apply:
                                             
*IMPORTANT NOTE*: Due to changes to the PGPLOT module, 'use
PDL::Graphics::PGPLOT' has been removed from PDL.pm (i.e. in scripts
and within perldl you now need to explicitly say 'use
PDL::Graphics::PGPLOT'). Additionally, it needs Karl's new 2.16
release of the PGPLOT module (available from CPAN).

Notable additions are a module for operations on complex piddles
(PDL::Complex), a subtype of PDL which allows manipulation of byte
type PDLs as N dimensional arrays of fixed length strings (PDL::Char)
and a Levenberg-Marquardt fitting module (PDL::Fit::LM).

Bug reports and patches to the relevant places on sourceforge, please.

