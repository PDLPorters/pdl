name: downstream testing
on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:
jobs:
  build-docker:
    runs-on: ubuntu-latest
    outputs:
      project-matrix: ${{ steps.set-matrix.outputs.project-matrix }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: PDLPorters/devops
          ref: master
          path: .github/devops
      - run: make -C .github/devops/docker -f Makefile.docker docker.pdl PATH_TO_PDL=$(pwd)
      - run: docker save pdl:latest --output pdl-latest.tar
      - uses: actions/upload-artifact@v4
        with:
          name: pdl-latest-image
          path: pdl-latest.tar
      - uses: perl-actions/install-with-cpanm@v1
      - id: set-matrix
        run: |
          (cpanm --local-lib=~/perl5 local::lib || ( cat ~/.cpanm/build.log && false )) && eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
          make -C .github/devops/docker -f Makefile.docker deps-lib gen-ci-matrix

  downstream-docker:
    runs-on: ubuntu-latest
    needs: build-docker
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.build-docker.outputs.project-matrix) }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: pdl-latest-image
          path: .
      - run: docker load --input pdl-latest.tar
      - uses: actions/checkout@v2
        with:
          repository: PDLPorters/devops
          ref: master
          path: .github/devops
      - uses: perl-actions/install-with-cpanm@v1
      - run: |
          (cpanm --local-lib=~/perl5 local::lib || ( cat ~/.cpanm/build.log && false )) && eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
          make -C .github/devops/docker -f Makefile.docker deps-lib
          make -C .github/devops/docker -f Makefile.docker run-ci-key KEY=${{ matrix.key }}
  build-status:
    runs-on: ubuntu-latest
    continue-on-error: true
    if: ${{ failure() }}
    needs: [ 'downstream-docker' ]
    steps:
      - uses: PDLPorters/devops/github-actions/irc-notifications@master
        with:
          target-build-status: true
          build-status-source: 'downstream'
          needs: ${{ toJSON(needs) }}
