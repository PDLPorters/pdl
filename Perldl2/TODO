Created on: Thu 10 Dec 2009 10:32:58 PM
Last saved: Tue 15 Jun 2010 06:41:33 AM


+-------------------------------------------------------------------+
|               TODO for Missing Perldl Functionality               |
+-------------------------------------------------------------------+

  NOTE: The startup file used is $HOME/.re.pl/repl.rc until
  back compatibility to support the existing .perldlrc and
  local.perldlrc features and functions.
 
  Use either perldl or Perldl2 when starting the PDL shell
  based on the value of WITH_DEVEL_REPL in perld.conf
 
  Add support for .pdlrc, .perldrc to startup of Perldl2.
 
  Add support for local.pdlrc, local.perldlrc similarly.
 
  Add documentation for the startup files for unix-en and win32
  systems.  Right now, the only doc is in the code.
 
  Support for q, x, exit to exit the REPL shell.
 
  Support for autoquoted arguments for all of the doc-type
  commands: help|usage|apropos|sig|badinfo|demo
 
  Support ? and ?? as aliases for help and apropos
   s/^\s*\?\?\s*/apropos/
   s/^\s*\?\s*/help/
 
  Implement shell escapes, perhaps with
  command completion (filename completion
  should already work).
 
  Add Perldl2 VERSION variable and display information
 
  Implement PDL shell startup boot messages, i.e.,
    perlDL shell v1.352
     PDL comes with ABSOLUTELY NO WARRANTY. For details, see the file
     'COPYING' in the PDL distribution. This is free software and you
     are welcome to redistribute it under certain conditions, see
     the same file for details.
    ReadLines, NiceSlice, MultiLines  enabled
    Reading /g/chm/.perldlrc...
    Found docs database /cygdrive/c/local/pmods/lib-w-pdl/cygwin-thread-multi-64int/PDL/pdldoc.db
    Type 'help' for online help
    Type 'demo' for online demos
    Loaded PDL v2.4.6_007 (supports bad values)
 
  Fix demos to run under the Perldl2 for windows.  The curent
  implementation uses the tput command to clear the screen but
  that is not available for win32.  I think a readline clear
  screen command should work.  Also, the demo 3d test hung at
  the end of the demo apparently because it is waiting for
  input (why?).
 
  Review and integrate PERLDL::XX parameters.  Some are not
  needed or useful for Perldl2.  Others need code to tie in
  with the new framework.
 
  Implement perldl command line options:
   -M <module> load module <module>
   -m <module> unload module <module>
   -I <dir>    Add <dir> to include path.
   -V          print PDL version info (e.g. for a bug report)
   -f <file>   execute file <file> before starting perldl
   -glut       try to load OpenGL module (Enables readline event-loop processing).
   -tk         try to load Tk module (Enables readline event-loop processing).
   -w          run with warning messages turned-on 
   -           Following arguments are files for input.
 
  Add option for quiet startup for use when piping to the shell
  or taking input from a file.

  Add INPUT and OUTPUT handle args for PDL shells.  This would be
  useful to tie the shell into another application, say Padre,
  or to add tests for the shells.  NOTE: This includes fixing
  perldl v.1.x not to use STDIN, STDOUT...
 
  Verify that input from terminal and/or files works correctly
  and consistently with perldl v.1.  NOTE: this should make it
  possible to implement some tests of the interactive shell
  from file input.
 
  Add @PERLDL::AUTO processing plugin.  Should be able to just
  run the code after the line is read but before it is eval'd
 
  Add ability to run $PERLDL::PROMPT if it is a code reference
  and not a string.  Just use same logic as in perldl but set
  the prompt with the $_REPL->prompt(&$code) instead of using
  $_REPL->prompt($string).

  Implement support for @PERLDL::PREPROCESS filters.  No support
  for the deprecated $PERLDL::PREPROCESS implementation will be
  provided in pdl2 (only legacy perldl for legacy preprocess).
 
  Add documentation to Perldl2 plugins and profiles and improve
  the usage for PrintControl so one doesn't have to explicitly
  type in the $_REPL->do_print($val) command.
 
  It would be nice if variable completion followed by a
  method call would collapse the extra space.  Similarly for
  other cases:  e.g. $_REPL ->do_print (1);

  Enhance completion strategy for Perldl2.  For example,
  order and prioritze completions to remove long lists
  of bad options.  Allow chained completions recognizing
  the output of PDL methods is a piddle so completion
  could chain as well.  If the completion is followed
  by certain characters, then scoot back and remove the
  extra whitespace.
 
  Update perldl documentation to match Perldl2 capabilities.
  Any way to transparently select the correct docs at runtime?
 
  Make Perldl2 fail/degrade gracefully if various files and
  configuration stuff is not available.  Lines and lines of
  backtrace isn't a help to anyone!
 
  Fix the newline differences between new line handling for
  TR::Perl (on win32 and cygwin and unix) and TR::Gnu (on
  cygwin and unix).  TR::Gnu seems to have an extra newline
  inserted per command.
 
  Add MultiLine prompt with continuation character marking
  the open structures. (e.g. MultiLine::TextBalanced)
 
  Add GLUT event loop support to Term::ReadLine::Perl and
  Term::ReadLine::Gnu.  Need to figure out a clean way to
  map this into the original modules.
 
  Skip command lines that are too short and don't put
  quit/q/x/exit in the history log.  Maybe remove duplicate
  entries as well as list history commands.

  Be sure to add a line to history if it closes out a
  multi-line block.  This should not be an issue once we
  have multi-line history entries supported.
 
  Add runtime control options for NiceSlice:
   report
   trans
   notrans
 
  Implement ^C/^D to end PPI multiline if it makes sense.

  Add a CompletionDriver for Plugins for load_plugin() as well
  as the ability to toggle plugins on and off (or at least
  enable and disable them).

  Make pdl2 fall back cleanly to a basic Devel::REPL or
  even perldl if requirements to run are not installed.

+-------------------------------------------------------------------+
| Features                       perldl                 pdl2        |
+-------------------------------------------------------------------+
  
  preproc_add/del                yes                    TBD
  
  ?,?? aliases                   yes                    TBD
  
  q,x aliases                    yes                    TBD
  
  User AUTO commands             yes                    TBD 
  
  Autoquoting doc commands       yes                    TBD
  
  $_ preserved                   no                     yes

  User extendable                rewrite/hard           plugins/easy
  
  History save/recall            yes                    yes
  
  !-history expansion            yes/partial            yes
  
  Lexical variables              yes/1-command only     yes
  
  Multiline expression entry     yes/Text::Balanced     yes/PPI based
  
  NiceSlice syntax               yes                    yes
  
  package NAMESPACE support      no                     yes
  
  Readline editing               yes/partial            yes
  
  TAB completion: @INC           no                     yes                                      
  
  TAB completion: filename       yes                    yes
  
  TAB completion: globals        no                     yes
  
  TAB completion: keyword        no                     yes                                      
  
  TAB completion: lexicals       no                     yes                                     
  
  TAB completion: methods        no                     yes                                      
  
  print p alias                  yes                    yes
  
  list history                   yes                    yes
